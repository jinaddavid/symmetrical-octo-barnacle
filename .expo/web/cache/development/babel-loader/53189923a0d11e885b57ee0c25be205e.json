{"ast":null,"code":"'use strict';\n\nvar register = function register() {};\n\nif (__DEV__) {\n  var AppState = require(\"../../AppState/AppState\");\n\n  var WebSocket = require(\"../../WebSocket/WebSocket\");\n\n  var reactDevTools = require('react-devtools-core');\n\n  var getDevServer = require(\"./getDevServer\");\n\n  if (WebSocket.isAvailable) {\n    var isAppActive = () => AppState.currentState !== 'background';\n\n    var devServer = getDevServer();\n    var host = devServer.bundleLoadedFromServer ? devServer.url.replace(/https?:\\/\\//, '').split(':')[0] : 'localhost';\n    reactDevTools.connectToDevTools({\n      isAppActive,\n      host,\n      port: window.__REACT_DEVTOOLS_PORT__,\n      resolveRNStyle: require(\"../../StyleSheet/flattenStyle\")\n    });\n  }\n}\n\nmodule.exports = {\n  register\n};","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/Core/Devtools/setupDevtools.js"],"names":["register","__DEV__","AppState","require","WebSocket","reactDevTools","getDevServer","isAvailable","isAppActive","currentState","devServer","host","bundleLoadedFromServer","url","replace","split","connectToDevTools","port","window","__REACT_DEVTOOLS_PORT__","resolveRNStyle","module","exports"],"mappings":"AAUA;;AAYA,IAAIA,QAAQ,GAAG,SAAXA,QAAW,GAAW,CAEzB,CAFD;;AAIA,IAAIC,OAAJ,EAAa;AACX,MAAMC,QAAQ,GAAGC,OAAO,2BAAxB;;AACA,MAAMC,SAAS,GAAGD,OAAO,6BAAzB;;AAIA,MAAME,aAAa,GAAGF,OAAO,CAAC,qBAAD,CAA7B;;AACA,MAAMG,YAAY,GAAGH,OAAO,kBAA5B;;AAGA,MAAIC,SAAS,CAACG,WAAd,EAA2B;AAKzB,QAAMC,WAAW,GAAG,MAAMN,QAAQ,CAACO,YAAT,KAA0B,YAApD;;AAGA,QAAMC,SAAS,GAAGJ,YAAY,EAA9B;AACA,QAAMK,IAAI,GAAGD,SAAS,CAACE,sBAAV,GACTF,SAAS,CAACG,GAAV,CAAcC,OAAd,CAAsB,aAAtB,EAAqC,EAArC,EAAyCC,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CADS,GAET,WAFJ;AAIAV,IAAAA,aAAa,CAACW,iBAAd,CAAgC;AAC9BR,MAAAA,WAD8B;AAE9BG,MAAAA,IAF8B;AAK9BM,MAAAA,IAAI,EAAEC,MAAM,CAACC,uBALiB;AAM9BC,MAAAA,cAAc,EAAEjB,OAAO;AANO,KAAhC;AAQD;AACF;;AAEDkB,MAAM,CAACC,OAAP,GAAiB;AACftB,EAAAA;AADe,CAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\ntype DevToolsPluginConnection = {\n  isAppActive: () => boolean,\n  host: string,\n  port: number,\n};\n\ntype DevToolsPlugin = {\n  connectToDevTools: (connection: DevToolsPluginConnection) => void,\n};\n\nlet register = function() {\n  // noop\n};\n\nif (__DEV__) {\n  const AppState = require('../../AppState/AppState');\n  const WebSocket = require('../../WebSocket/WebSocket');\n  /* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an\n   * error found when Flow v0.54 was deployed. To see the error delete this\n   * comment and run Flow. */\n  const reactDevTools = require('react-devtools-core');\n  const getDevServer = require('./getDevServer');\n\n  // Initialize dev tools only if the native module for WebSocket is available\n  if (WebSocket.isAvailable) {\n    // Don't steal the DevTools from currently active app.\n    // Note: if you add any AppState subscriptions to this file,\n    // you will also need to guard against `AppState.isAvailable`,\n    // or the code will throw for bundles that don't have it.\n    const isAppActive = () => AppState.currentState !== 'background';\n\n    // Get hostname from development server (packager)\n    const devServer = getDevServer();\n    const host = devServer.bundleLoadedFromServer\n      ? devServer.url.replace(/https?:\\/\\//, '').split(':')[0]\n      : 'localhost';\n\n    reactDevTools.connectToDevTools({\n      isAppActive,\n      host,\n      // Read the optional global variable for backward compatibility.\n      // It was added in https://github.com/facebook/react-native/commit/bf2b435322e89d0aeee8792b1c6e04656c2719a0.\n      port: window.__REACT_DEVTOOLS_PORT__,\n      resolveRNStyle: require('../../StyleSheet/flattenStyle'),\n    });\n  }\n}\n\nmodule.exports = {\n  register,\n};\n"]},"metadata":{},"sourceType":"script"}