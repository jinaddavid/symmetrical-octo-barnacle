{"ast":null,"code":"var _excluded = [\"style\", \"rippleColor\"],\n    _excluded2 = [\"children\"],\n    _excluded3 = [\"children\", \"style\"];\nvar _jsxFileName = \"/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native-gesture-handler/GestureHandler.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Slider from \"react-native-web/dist/exports/Slider\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToolbarAndroid from \"react-native-web/dist/exports/ToolbarAndroid\";\nimport ViewPagerAndroid from \"react-native-web/dist/exports/ViewPagerAndroid\";\nimport DrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from 'react-native/Libraries/StyleSheet/processColor';\nimport Touchable from 'react-native/Libraries/Components/Touchable/Touchable';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport PropTypes from 'prop-types';\nimport gestureHandlerRootHOC from \"./gestureHandlerRootHOC\";\nvar RNGestureHandlerModule = NativeModules.RNGestureHandlerModule;\nvar {\n  UIManager\n} = NativeModules;\nvar {\n  setJSResponder: oldSetJSResponder,\n  clearJSResponder: oldClearJSResponder\n} = UIManager;\n\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\n\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\nUIManager.genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManager.genericDirectEventTypes), {}, {\n  onGestureHandlerEvent: {\n    registrationName: 'onGestureHandlerEvent'\n  },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange'\n  }\n});\nvar State = RNGestureHandlerModule.State;\nvar Directions = RNGestureHandlerModule.Direction;\nvar handlerTag = 1;\nvar handlerIDToTag = {};\nvar GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]),\n  simultaneousHandlers: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    left: PropTypes.number,\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    vertical: PropTypes.number,\n    horizontal: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number\n  })]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func\n};\nvar stateToPropMappings = {\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded'\n};\n\nfunction isConfigParam(param, name) {\n  return param !== undefined && typeof param !== 'function' && (typeof param !== 'object' || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  return handlerIDs.map(handlerID => handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1).filter(handlerTag => handlerTag > 0);\n}\n\nfunction filterConfig(props, validProps) {\n  var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var res = _objectSpread({}, defaults);\n\n  Object.keys(validProps).forEach(key => {\n    var value = props[key];\n\n    if (isConfigParam(value, key)) {\n      var _value = props[key];\n\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        _value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof _value !== 'object') {\n          _value = {\n            top: _value,\n            left: _value,\n            bottom: _value,\n            right: _value\n          };\n        }\n      }\n\n      res[key] = _value;\n    }\n  });\n  return res;\n}\n\nfunction hasUnresolvedRefs(props) {\n  var extract = refs => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n\n    return refs.some(r => r && r.current === null);\n  };\n\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nfunction createHandler(handlerName) {\n  var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n  var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  class Handler extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this._onGestureHandlerEvent = event => {\n        if (event.nativeEvent.handlerTag === this._handlerTag) {\n          this.props.onGestureEvent && this.props.onGestureEvent(event);\n        } else {\n          this.props.onGestureHandlerEvent && this.props.onGestureHandlerEvent(event);\n        }\n      };\n\n      this._onGestureHandlerStateChange = event => {\n        if (event.nativeEvent.handlerTag === this._handlerTag) {\n          this.props.onHandlerStateChange && this.props.onHandlerStateChange(event);\n          var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n          if (typeof this.props[stateEventName] === 'function') {\n            this.props[stateEventName](event);\n          }\n        } else {\n          this.props.onGestureHandlerStateChange && this.props.onGestureHandlerStateChange(event);\n        }\n      };\n\n      this._refHandler = node => {\n        this._viewNode = node;\n        var child = React.Children.only(this.props.children);\n        var {\n          ref\n        } = child;\n\n        if (ref !== null) {\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        }\n      };\n\n      this._handlerTag = handlerTag++;\n      this._config = {};\n\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(\"Handler with ID \\\"\".concat(props.id, \"\\\" already registered\"));\n        }\n\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n\n      if (this._updateEnqueued) {\n        clearImmediate(this._updateEnqueued);\n      }\n\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      this._viewTag = findNodeHandle(this._viewNode);\n      this._config = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config);\n\n      if (hasUnresolvedRefs(this.props)) {\n        this._updateEnqueued = setImmediate(() => {\n          this._updateEnqueued = null;\n\n          this._update();\n        });\n      }\n\n      RNGestureHandlerModule.createGestureHandler(handlerName, this._handlerTag, this._config);\n      RNGestureHandlerModule.attachGestureHandler(this._handlerTag, this._viewTag);\n    }\n\n    componentDidUpdate() {\n      var viewTag = findNodeHandle(this._viewNode);\n\n      if (this._viewTag !== viewTag) {\n        this._viewTag = viewTag;\n        RNGestureHandlerModule.attachGestureHandler(this._handlerTag, viewTag);\n      }\n\n      this._update();\n    }\n\n    _update() {\n      var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config);\n\n      if (!deepEqual(this._config, newConfig)) {\n        this._config = newConfig;\n        RNGestureHandlerModule.updateGestureHandler(this._handlerTag, this._config);\n      }\n    }\n\n    setNativeProps(updates) {\n      var mergedProps = _objectSpread(_objectSpread({}, this.props), updates);\n\n      var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config);\n      this._config = newConfig;\n      RNGestureHandlerModule.updateGestureHandler(this._handlerTag, this._config);\n    }\n\n    render() {\n      var gestureEventHandler = this._onGestureHandlerEvent;\n      var {\n        onGestureEvent,\n        onGestureHandlerEvent\n      } = this.props;\n\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        if (onGestureHandlerEvent) {\n          throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n        }\n\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n          throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n        }\n      }\n\n      var gestureStateEventHandler = this._onGestureHandlerStateChange;\n      var {\n        onHandlerStateChange,\n        onGestureHandlerStateChange\n      } = this.props;\n\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        if (onGestureHandlerStateChange) {\n          throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n        }\n\n        gestureStateEventHandler = this.props.onHandlerStateChange;\n      } else {\n        if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n          throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n        }\n      }\n\n      var child = React.Children.only(this.props.children);\n      var children = child.props.children;\n\n      if (Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n        children = React.Children.toArray(children);\n        children.push(Touchable.renderDebugView({\n          color: 'mediumspringgreen',\n          hitSlop: child.props.hitSlop\n        }));\n      }\n\n      return React.cloneElement(child, {\n        ref: this._refHandler,\n        collapsable: false,\n        onGestureHandlerEvent: gestureEventHandler,\n        onGestureHandlerStateChange: gestureStateEventHandler\n      }, children);\n    }\n\n  }\n\n  Handler.propTypes = _objectSpread(_objectSpread({}, GestureHandlerPropTypes), propTypes);\n  return Handler;\n}\n\nvar NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool\n});\nvar TapGestureHandler = createHandler('TapGestureHandler', {\n  maxDurationMs: PropTypes.number,\n  maxDelayMs: PropTypes.number,\n  numberOfTaps: PropTypes.number,\n  maxDeltaX: PropTypes.number,\n  maxDeltaY: PropTypes.number,\n  maxDist: PropTypes.number,\n  minPointers: PropTypes.number\n}, {});\nvar FlingGestureHandler = createHandler('FlingGestureHandler', {\n  numberOfPointers: PropTypes.number,\n  direction: PropTypes.number\n}, {});\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nvar ForceTouchGestureHandler = NativeModules.PlatformConstants.forceTouchAvailable ? createHandler('ForceTouchGestureHandler', {\n  minForce: PropTypes.number,\n  maxForce: PropTypes.number,\n  feedbackOnActivation: PropTypes.bool\n}, {}) : ForceTouchFallback;\nForceTouchGestureHandler.forceTouchAvailable = NativeModules.PlatformConstants.forceTouchAvailable || false;\nvar LongPressGestureHandler = createHandler('LongPressGestureHandler', {\n  minDurationMs: PropTypes.number,\n  maxDist: PropTypes.number\n}, {});\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n    throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n    throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n    throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n    throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  var res = _objectSpread({}, props);\n\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n\n  return transformPanGestureHandlerProps(props);\n}\n\nvar PanGestureHandler = createHandler('PanGestureHandler', {\n  activeOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  activeOffsetX: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  failOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  failOffsetX: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  minDist: PropTypes.number,\n  minVelocity: PropTypes.number,\n  minVelocityX: PropTypes.number,\n  minVelocityY: PropTypes.number,\n  minPointers: PropTypes.number,\n  maxPointers: PropTypes.number,\n  avgTouches: PropTypes.bool\n}, {}, managePanProps, {\n  activeOffsetYStart: true,\n  activeOffsetYEnd: true,\n  activeOffsetXStart: true,\n  activeOffsetXEnd: true,\n  failOffsetYStart: true,\n  failOffsetYEnd: true,\n  failOffsetXStart: true,\n  failOffsetXEnd: true\n});\nvar PinchGestureHandler = createHandler('PinchGestureHandler', {}, {});\nvar RotationGestureHandler = createHandler('RotationGestureHandler', {}, {});\nvar NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);\n\nvar NATIVE_WRAPPER_PROPS_FILTER = _objectSpread(_objectSpread({}, NativeViewGestureHandler.propTypes), {}, {\n  onGestureHandlerEvent: PropTypes.func,\n  onGestureHandlerStateChange: PropTypes.func\n});\n\nfunction createNativeWrapper(Component) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  class ComponentWrapper extends React.Component {\n    constructor() {\n      super(...arguments);\n\n      this._refHandler = node => {\n        var source = node;\n\n        while (source != null) {\n          for (var methodName of Object.getOwnPropertyNames(source)) {\n            if (!methodName.startsWith('_') && !methodName.startsWith('component') && !NATIVE_WRAPPER_BIND_BLACKLIST.has(methodName) && typeof source[methodName] === 'function' && this[methodName] === undefined) {\n              if (source[methodName].prototype) {\n                this[methodName] = source[methodName].bind(node);\n              } else {\n                this[methodName] = source[methodName];\n              }\n            }\n          }\n\n          source = Object.getPrototypeOf(source);\n        }\n      };\n    }\n\n    render() {\n      var gestureHandlerProps = Object.keys(this.props).reduce((props, key) => {\n        if (key in NATIVE_WRAPPER_PROPS_FILTER) {\n          props[key] = this.props[key];\n        }\n\n        return props;\n      }, _objectSpread({}, config));\n      return React.createElement(NativeViewGestureHandler, _extends({}, gestureHandlerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 9\n        }\n      }), React.createElement(Component, _extends({}, this.props, {\n        ref: this._refHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }\n      })));\n    }\n\n  }\n\n  ComponentWrapper.propTypes = _objectSpread({}, Component.propTypes);\n  return ComponentWrapper;\n}\n\nvar WrappedScrollView = createNativeWrapper(ScrollView, {\n  disallowInterruption: true\n});\nvar WrappedSlider = createNativeWrapper(Slider, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nvar WrappedSwitch = createNativeWrapper(Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nvar WrappedTextInput = createNativeWrapper(TextInput);\nvar WrappedToolbarAndroid = createNativeWrapper(ToolbarAndroid);\nvar WrappedViewPagerAndroid = createNativeWrapper(ViewPagerAndroid, {\n  disallowInterruption: true\n});\nvar WrappedDrawerLayoutAndroid = createNativeWrapper(DrawerLayoutAndroid, {\n  disallowInterruption: true\n});\nWrappedDrawerLayoutAndroid.positions = DrawerLayoutAndroid.positions;\n\nState.print = state => {\n  var keys = Object.keys(State);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nvar RawButton = createNativeWrapper(requireNativeComponent('RNGestureHandlerButton', null), {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\n\nclass BaseButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleEvent = _ref => {\n      var {\n        nativeEvent\n      } = _ref;\n      var {\n        state,\n        oldState,\n        pointerInside\n      } = nativeEvent;\n      var active = pointerInside && state === State.ACTIVE;\n\n      if (active !== this._lastActive && this.props.onActiveStateChange) {\n        this.props.onActiveStateChange(active);\n      }\n\n      if (oldState === State.ACTIVE && state !== State.CANCELLED && this._lastActive && this.props.onPress) {\n        this.props.onPress(active);\n      }\n\n      this._lastActive = active;\n    };\n\n    this._onHandlerStateChange = e => {\n      this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n\n      this._handleEvent(e);\n    };\n\n    this._onGestureEvent = e => {\n      this.props.onGestureEvent && this.props.onGestureEvent(e);\n\n      this._handleEvent(e);\n    };\n\n    this._lastActive = false;\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      style,\n      rippleColor\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n\n    return React.createElement(RawButton, _extends({\n      style: [{\n        overflow: 'hidden'\n      }, style],\n      rippleColor: processColor(rippleColor)\n    }, rest, {\n      onGestureEvent: this._onGestureEvent,\n      onHandlerStateChange: this._onHandlerStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nBaseButton.propTypes = _objectSpread(_objectSpread({}, RawButton.propTypes), {}, {\n  onPress: PropTypes.func,\n  onActiveStateChange: PropTypes.func\n});\nvar AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\nvar btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\n\nclass RectButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onActiveStateChange = active => {\n      if (Platform.OS !== 'android') {\n        this._opacity.setValue(active ? this.props.activeOpacity : 0);\n      }\n\n      this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n    };\n\n    this._opacity = new Animated.Value(0);\n  }\n\n  render() {\n    var _this$props2 = this.props,\n        {\n      children\n    } = _this$props2,\n        rest = _objectWithoutProperties(_this$props2, _excluded2);\n\n    return React.createElement(BaseButton, _extends({}, rest, {\n      onActiveStateChange: this._onActiveStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 7\n      }\n    }), React.createElement(Animated.View, {\n      style: [btnStyles.underlay, {\n        opacity: this._opacity\n      }, {\n        backgroundColor: this.props.underlayColor\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 9\n      }\n    }), children);\n  }\n\n}\n\nRectButton.propTypes = BaseButton.propTypes;\nRectButton.defaultProps = {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n};\n\nclass BorderlessButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onActiveStateChange = active => {\n      if (Platform.OS !== 'android') {\n        this._opacity.setValue(active ? this.props.activeOpacity : 1);\n      }\n\n      this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n    };\n\n    this._opacity = new Animated.Value(1);\n  }\n\n  render() {\n    var _this$props3 = this.props,\n        {\n      children,\n      style\n    } = _this$props3,\n        rest = _objectWithoutProperties(_this$props3, _excluded3);\n\n    return React.createElement(AnimatedBaseButton, _extends({}, rest, {\n      onActiveStateChange: this._onActiveStateChange,\n      style: [style, Platform.OS === 'ios' && {\n        opacity: this._opacity\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n}\n\nBorderlessButton.propTypes = _objectSpread(_objectSpread({}, BaseButton.propTypes), {}, {\n  borderless: PropTypes.bool\n});\nBorderlessButton.defaultProps = {\n  activeOpacity: 0.3,\n  borderless: true\n};\n\nvar FlatListWithGHScroll = props => React.createElement(FlatList, _extends({}, props, {\n  renderScrollComponent: props => React.createElement(WrappedScrollView, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 37\n    }\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 904,\n    columnNumber: 3\n  }\n}));\n\nexport { WrappedScrollView as ScrollView, WrappedSlider as Slider, WrappedSwitch as Switch, WrappedTextInput as TextInput, WrappedToolbarAndroid as ToolbarAndroid, WrappedViewPagerAndroid as ViewPagerAndroid, WrappedDrawerLayoutAndroid as DrawerLayoutAndroid, NativeViewGestureHandler, TapGestureHandler, FlingGestureHandler, ForceTouchGestureHandler, LongPressGestureHandler, PanGestureHandler, PinchGestureHandler, RotationGestureHandler, State, RawButton, BaseButton, RectButton, BorderlessButton, FlatListWithGHScroll as FlatList, gestureHandlerRootHOC, Directions };","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native-gesture-handler/GestureHandler.js"],"names":["React","requireNativeComponent","processColor","Touchable","deepEqual","PropTypes","gestureHandlerRootHOC","RNGestureHandlerModule","NativeModules","UIManager","setJSResponder","oldSetJSResponder","clearJSResponder","oldClearJSResponder","tag","blockNativeResponder","handleSetJSResponder","handleClearJSResponder","genericDirectEventTypes","onGestureHandlerEvent","registrationName","onGestureHandlerStateChange","State","Directions","Direction","handlerTag","handlerIDToTag","GestureHandlerPropTypes","id","string","minPointers","number","enabled","bool","waitFor","oneOfType","object","arrayOf","simultaneousHandlers","shouldCancelWhenOutside","hitSlop","shape","left","top","right","bottom","vertical","horizontal","width","height","onGestureEvent","func","onHandlerStateChange","onBegan","onFailed","onCancelled","onActivated","onEnded","stateToPropMappings","BEGAN","FAILED","CANCELLED","ACTIVE","END","isConfigParam","param","name","undefined","transformIntoHandlerTags","handlerIDs","Array","isArray","map","handlerID","current","_handlerTag","filter","filterConfig","props","validProps","defaults","res","Object","keys","forEach","key","value","hasUnresolvedRefs","extract","refs","some","r","createHandler","handlerName","propTypes","config","transformProps","customNativeProps","Handler","Component","constructor","_onGestureHandlerEvent","event","nativeEvent","_onGestureHandlerStateChange","stateEventName","state","_refHandler","node","_viewNode","child","Children","only","children","ref","_config","Error","componentWillUnmount","dropGestureHandler","_updateEnqueued","clearImmediate","componentDidMount","_viewTag","findNodeHandle","setImmediate","_update","createGestureHandler","attachGestureHandler","componentDidUpdate","viewTag","newConfig","updateGestureHandler","setNativeProps","updates","mergedProps","render","gestureEventHandler","gestureStateEventHandler","TOUCH_TARGET_DEBUG","type","displayName","toArray","push","renderDebugView","color","cloneElement","collapsable","NativeViewGestureHandler","shouldActivateOnStart","disallowInterruption","TapGestureHandler","maxDurationMs","maxDelayMs","numberOfTaps","maxDeltaX","maxDeltaY","maxDist","FlingGestureHandler","numberOfPointers","direction","ForceTouchFallback","console","warn","ForceTouchGestureHandler","PlatformConstants","forceTouchAvailable","minForce","maxForce","feedbackOnActivation","LongPressGestureHandler","minDurationMs","validatePanGestureHandlerProps","minDeltaX","activeOffsetX","failOffsetX","minDeltaY","activeOffsetY","failOffsetY","transformPanGestureHandlerProps","activeOffsetXStart","activeOffsetXEnd","failOffsetXStart","failOffsetXEnd","minOffsetX","activeOffsetYStart","activeOffsetYEnd","failOffsetYStart","failOffsetYEnd","minOffsetY","managePanProps","__DEV__","PanGestureHandler","minDist","minVelocity","minVelocityX","minVelocityY","maxPointers","avgTouches","PinchGestureHandler","RotationGestureHandler","NATIVE_WRAPPER_BIND_BLACKLIST","Set","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","ComponentWrapper","source","methodName","getOwnPropertyNames","startsWith","has","prototype","bind","getPrototypeOf","gestureHandlerProps","reduce","WrappedScrollView","ScrollView","WrappedSlider","Slider","WrappedSwitch","Switch","WrappedTextInput","TextInput","WrappedToolbarAndroid","ToolbarAndroid","WrappedViewPagerAndroid","ViewPagerAndroid","WrappedDrawerLayoutAndroid","DrawerLayoutAndroid","positions","print","i","length","RawButton","BaseButton","_handleEvent","oldState","pointerInside","active","_lastActive","onActiveStateChange","onPress","_onHandlerStateChange","e","_onGestureEvent","style","rippleColor","rest","overflow","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","RectButton","_onActiveStateChange","Platform","OS","_opacity","setValue","activeOpacity","Value","opacity","backgroundColor","underlayColor","defaultProps","BorderlessButton","borderless","FlatListWithGHScroll","FlatList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  findNodeHandle,\n  requireNativeComponent,\n  Animated,\n  NativeModules,\n  ScrollView,\n  Slider,\n  Switch,\n  TextInput,\n  ToolbarAndroid,\n  ViewPagerAndroid,\n  DrawerLayoutAndroid,\n  StyleSheet,\n  FlatList,\n  Platform,\n} from 'react-native';\nimport processColor from 'react-native/Libraries/StyleSheet/processColor';\nimport Touchable from 'react-native/Libraries/Components/Touchable/Touchable';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport PropTypes from 'prop-types';\n\nimport gestureHandlerRootHOC from './gestureHandlerRootHOC';\n\nconst RNGestureHandlerModule = NativeModules.RNGestureHandlerModule;\n\n/* Wrap JS responder calls and notify gesture handler manager */\nconst { UIManager } = NativeModules;\nconst {\n  setJSResponder: oldSetJSResponder,\n  clearJSResponder: oldClearJSResponder,\n} = UIManager;\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManager.genericDirectEventTypes = {\n  ...UIManager.genericDirectEventTypes,\n  onGestureHandlerEvent: { registrationName: 'onGestureHandlerEvent' },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange',\n  },\n};\n\nconst State = RNGestureHandlerModule.State;\n\nconst Directions = RNGestureHandlerModule.Direction;\n\nlet handlerTag = 1;\nconst handlerIDToTag = {};\n\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nconst stateToPropMappings = {\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded',\n};\n\nfunction isConfigParam(param, name) {\n  return (\n    param !== undefined &&\n    typeof param !== 'function' &&\n    (typeof param !== 'object' || !('__isNative' in param)) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      handlerID =>\n        handlerIDToTag[handlerID] ||\n        (handlerID.current && handlerID.current._handlerTag) ||\n        -1\n    )\n    .filter(handlerTag => handlerTag > 0);\n}\n\nfunction filterConfig(props, validProps, defaults = {}) {\n  const res = { ...defaults };\n  Object.keys(validProps).forEach(key => {\n    const value = props[key];\n    if (isConfigParam(value, key)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction hasUnresolvedRefs(props) {\n  const extract = refs => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(r => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nfunction createHandler(\n  handlerName,\n  propTypes = null,\n  config = {},\n  transformProps,\n  customNativeProps = {}\n) {\n  class Handler extends React.Component {\n    static propTypes = {\n      ...GestureHandlerPropTypes,\n      ...propTypes,\n    };\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _onGestureHandlerEvent = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onGestureEvent && this.props.onGestureEvent(event);\n      } else {\n        this.props.onGestureHandlerEvent &&\n          this.props.onGestureHandlerEvent(event);\n      }\n    };\n\n    _onGestureHandlerStateChange = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onHandlerStateChange &&\n          this.props.onHandlerStateChange(event);\n\n        const stateEventName = stateToPropMappings[event.nativeEvent.state];\n        if (typeof this.props[stateEventName] === 'function') {\n          this.props[stateEventName](event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange &&\n          this.props.onGestureHandlerStateChange(event);\n      }\n    };\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      const { ref } = child;\n      if (ref !== null) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      }\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this._updateEnqueued) {\n        clearImmediate(this._updateEnqueued);\n      }\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      this._viewTag = findNodeHandle(this._viewNode);\n      this._config = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      if (hasUnresolvedRefs(this.props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // setImmediate. This makes it so _update function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        this._updateEnqueued = setImmediate(() => {\n          this._updateEnqueued = null;\n          this._update();\n        });\n      }\n      RNGestureHandlerModule.createGestureHandler(\n        handlerName,\n        this._handlerTag,\n        this._config\n      );\n      RNGestureHandlerModule.attachGestureHandler(\n        this._handlerTag,\n        this._viewTag\n      );\n    }\n\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._viewTag = viewTag;\n        RNGestureHandlerModule.attachGestureHandler(this._handlerTag, viewTag);\n      }\n      this._update();\n    }\n\n    _update() {\n      const newConfig = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._config = newConfig;\n        RNGestureHandlerModule.updateGestureHandler(\n          this._handlerTag,\n          this._config\n        );\n      }\n    }\n\n    setNativeProps(updates) {\n      const mergedProps = { ...this.props, ...updates };\n      const newConfig = filterConfig(\n        transformProps ? transformProps(mergedProps) : mergedProps,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      this._config = newConfig;\n      RNGestureHandlerModule.updateGestureHandler(\n        this._handlerTag,\n        this._config\n      );\n    }\n\n    render() {\n      let gestureEventHandler = this._onGestureHandlerEvent;\n      const { onGestureEvent, onGestureHandlerEvent } = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      let gestureStateEventHandler = this._onGestureHandlerStateChange;\n      const { onHandlerStateChange, onGestureHandlerStateChange } = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureStateEventHandler = this.props.onHandlerStateChange;\n      } else {\n        if (\n          onGestureHandlerStateChange &&\n          typeof onGestureHandlerStateChange !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      const child = React.Children.only(this.props.children);\n      let children = child.props.children;\n      if (\n        Touchable.TOUCH_TARGET_DEBUG &&\n        child.type &&\n        (child.type === 'RNGestureHandlerButton' ||\n          child.type.name === 'View' ||\n          child.type.displayName === 'View')\n      ) {\n        children = React.Children.toArray(children);\n        children.push(\n          Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop,\n          })\n        );\n      }\n      return React.cloneElement(\n        child,\n        {\n          ref: this._refHandler,\n          collapsable: false,\n          onGestureHandlerEvent: gestureEventHandler,\n          onGestureHandlerStateChange: gestureStateEventHandler,\n        },\n        children\n      );\n    }\n  }\n  return Handler;\n}\n\nconst NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n});\nconst TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    maxDist: PropTypes.number,\n    minPointers: PropTypes.number,\n  },\n  {}\n);\n\nconst FlingGestureHandler = createHandler(\n  'FlingGestureHandler',\n  {\n    numberOfPointers: PropTypes.number,\n    direction: PropTypes.number,\n  },\n  {}\n);\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nconst ForceTouchGestureHandler = NativeModules.PlatformConstants\n  .forceTouchAvailable\n  ? createHandler(\n      'ForceTouchGestureHandler',\n      {\n        minForce: PropTypes.number,\n        maxForce: PropTypes.number,\n        feedbackOnActivation: PropTypes.bool,\n      },\n      {}\n    )\n  : ForceTouchFallback;\n\nForceTouchGestureHandler.forceTouchAvailable =\n  NativeModules.PlatformConstants.forceTouchAvailable || false;\n\nconst LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    minDurationMs: PropTypes.number,\n    maxDist: PropTypes.number,\n  },\n  {}\n);\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nconst PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    activeOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    activeOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n  },\n  {},\n  managePanProps,\n  {\n    activeOffsetYStart: true,\n    activeOffsetYEnd: true,\n    activeOffsetXStart: true,\n    activeOffsetXEnd: true,\n    failOffsetYStart: true,\n    failOffsetYEnd: true,\n    failOffsetXStart: true,\n    failOffsetXEnd: true,\n  }\n);\nconst PinchGestureHandler = createHandler('PinchGestureHandler', {}, {});\nconst RotationGestureHandler = createHandler('RotationGestureHandler', {}, {});\n\nconst NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);\nconst NATIVE_WRAPPER_PROPS_FILTER = {\n  // accept all gesture handler prop types plus native wrapper specific ones\n  ...NativeViewGestureHandler.propTypes,\n  // we want to pass gesture event handlers if registered\n  onGestureHandlerEvent: PropTypes.func,\n  onGestureHandlerStateChange: PropTypes.func,\n};\n\nfunction createNativeWrapper(Component, config = {}) {\n  class ComponentWrapper extends React.Component {\n    static propTypes = {\n      ...Component.propTypes,\n    };\n\n    _refHandler = node => {\n      // bind native component's methods\n      let source = node;\n      while (source != null) {\n        for (let methodName of Object.getOwnPropertyNames(source)) {\n          if (\n            !methodName.startsWith('_') && // private methods\n            !methodName.startsWith('component') && // lifecycle methods\n            !NATIVE_WRAPPER_BIND_BLACKLIST.has(methodName) && // other\n            typeof source[methodName] === 'function' &&\n            this[methodName] === undefined\n          ) {\n            if (source[methodName].prototype) {\n              // determine if it's not bound already\n              this[methodName] = source[methodName].bind(node);\n            } else {\n              this[methodName] = source[methodName];\n            }\n          }\n        }\n        source = Object.getPrototypeOf(source);\n      }\n    };\n\n    render() {\n      // filter out props that should be passed to gesture handler wrapper\n      const gestureHandlerProps = Object.keys(this.props).reduce(\n        (props, key) => {\n          if (key in NATIVE_WRAPPER_PROPS_FILTER) {\n            props[key] = this.props[key];\n          }\n          return props;\n        },\n        { ...config } // watch out not to modify config\n      );\n      return (\n        <NativeViewGestureHandler {...gestureHandlerProps}>\n          <Component {...this.props} ref={this._refHandler} />\n        </NativeViewGestureHandler>\n      );\n    }\n  }\n  return ComponentWrapper;\n}\n\nconst WrappedScrollView = createNativeWrapper(ScrollView, {\n  disallowInterruption: true,\n});\nconst WrappedSlider = createNativeWrapper(Slider, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nconst WrappedSwitch = createNativeWrapper(Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nconst WrappedTextInput = createNativeWrapper(TextInput);\n\nconst WrappedToolbarAndroid = createNativeWrapper(ToolbarAndroid);\nconst WrappedViewPagerAndroid = createNativeWrapper(ViewPagerAndroid, {\n  disallowInterruption: true,\n});\nconst WrappedDrawerLayoutAndroid = createNativeWrapper(DrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\nWrappedDrawerLayoutAndroid.positions = DrawerLayoutAndroid.positions;\n\nState.print = state => {\n  const keys = Object.keys(State);\n  for (let i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nconst RawButton = createNativeWrapper(\n  requireNativeComponent('RNGestureHandlerButton', null),\n  {\n    shouldCancelWhenOutside: false,\n    shouldActivateOnStart: false,\n  }\n);\n\n/* Buttons */\n\nclass BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { style, rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        style={[{ overflow: 'hidden' }, style]}\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nclass RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, ...rest } = this.props;\n\n    return (\n      <BaseButton {...rest} onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            { opacity: this._opacity },\n            { backgroundColor: this.props.underlayColor },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nclass BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\n/* Other */\n\nconst FlatListWithGHScroll = props => (\n  <FlatList\n    {...props}\n    renderScrollComponent={props => <WrappedScrollView {...props} />}\n  />\n);\n\nexport {\n  WrappedScrollView as ScrollView,\n  WrappedSlider as Slider,\n  WrappedSwitch as Switch,\n  WrappedTextInput as TextInput,\n  WrappedToolbarAndroid as ToolbarAndroid,\n  WrappedViewPagerAndroid as ViewPagerAndroid,\n  WrappedDrawerLayoutAndroid as DrawerLayoutAndroid,\n  NativeViewGestureHandler,\n  TapGestureHandler,\n  FlingGestureHandler,\n  ForceTouchGestureHandler,\n  LongPressGestureHandler,\n  PanGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  State,\n  /* Buttons */\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  /* Other */\n  FlatListWithGHScroll as FlatList,\n  gestureHandlerRootHOC,\n  Directions,\n};\n"]},"metadata":{},"sourceType":"module"}