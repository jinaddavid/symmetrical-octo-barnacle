{"ast":null,"code":"'use strict';\n\nclass EventSubscription {\n  constructor(subscriber) {\n    this.subscriber = subscriber;\n  }\n\n  remove() {\n    this.subscriber.removeSubscription(this);\n  }\n\n}\n\nmodule.exports = EventSubscription;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/vendor/emitter/EventSubscription.js"],"names":["EventSubscription","constructor","subscriber","remove","removeSubscription","module","exports"],"mappings":"AAUA;;AAQA,MAAMA,iBAAN,CAAwB;AAStBC,EAAAA,WAAW,CAACC,UAAD,EAAsC;AAC/C,SAAKA,UAAL,GAAkBA,UAAlB;AACD;;AAKDC,EAAAA,MAAM,GAAG;AACP,SAAKD,UAAL,CAAgBE,kBAAhB,CAAmC,IAAnC;AACD;;AAlBqB;;AAqBxBC,MAAM,CAACC,OAAP,GAAiBN,iBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type EventSubscriptionVendor from './EventSubscriptionVendor';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nclass EventSubscription {\n  eventType: string;\n  key: number;\n  subscriber: EventSubscriptionVendor;\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  constructor(subscriber: EventSubscriptionVendor) {\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n  remove() {\n    this.subscriber.removeSubscription(this);\n  }\n}\n\nmodule.exports = EventSubscription;\n"]},"metadata":{},"sourceType":"script"}