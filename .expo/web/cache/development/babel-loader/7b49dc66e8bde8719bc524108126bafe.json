{"ast":null,"code":"'use strict';\n\nvar {\n  PlatformConstants\n} = require(\"../BatchedBridge/NativeModules\");\n\nvar ReactNativeVersion = require(\"./ReactNativeVersion\");\n\nexports.checkVersions = function checkVersions() {\n  if (!PlatformConstants) {\n    return;\n  }\n\n  var nativeVersion = PlatformConstants.reactNativeVersion;\n\n  if (ReactNativeVersion.version.major !== nativeVersion.major || ReactNativeVersion.version.minor !== nativeVersion.minor) {\n    console.error(\"React Native version mismatch.\\n\\nJavaScript version: \".concat(_formatVersion(ReactNativeVersion.version), \"\\n\") + \"Native version: \".concat(_formatVersion(nativeVersion), \"\\n\\n\") + 'Make sure that you have rebuilt the native code. If the problem ' + 'persists try clearing the Watchman and packager caches with ' + '`watchman watch-del-all && react-native start --reset-cache`.');\n  }\n};\n\nfunction _formatVersion(version) {\n  return \"\".concat(version.major, \".\").concat(version.minor, \".\").concat(version.patch) + (version.prerelease !== null ? \"-\".concat(version.prerelease) : '');\n}","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/Core/ReactNativeVersionCheck.js"],"names":["PlatformConstants","require","ReactNativeVersion","exports","checkVersions","nativeVersion","reactNativeVersion","version","major","minor","console","error","_formatVersion","patch","prerelease"],"mappings":"AASA;;AAEA,IAAM;AAACA,EAAAA;AAAD,IAAsBC,OAAO,kCAAnC;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,wBAAlC;;AAWAE,OAAO,CAACC,aAAR,GAAwB,SAASA,aAAT,GAA+B;AACrD,MAAI,CAACJ,iBAAL,EAAwB;AACtB;AACD;;AAED,MAAMK,aAAa,GAAGL,iBAAiB,CAACM,kBAAxC;;AACA,MACEJ,kBAAkB,CAACK,OAAnB,CAA2BC,KAA3B,KAAqCH,aAAa,CAACG,KAAnD,IACAN,kBAAkB,CAACK,OAAnB,CAA2BE,KAA3B,KAAqCJ,aAAa,CAACI,KAFrD,EAGE;AACAC,IAAAA,OAAO,CAACC,KAAR,CACE,gEAAyDC,cAAc,CACrEV,kBAAkB,CAACK,OADkD,CAAvE,oCAGqBK,cAAc,CAACP,aAAD,CAHnC,YAIE,kEAJF,GAKE,8DALF,GAME,+DAPJ;AASD;AACF,CApBD;;AAsBA,SAASO,cAAT,CAAwBL,OAAxB,EAAyC;AACvC,SACE,UAAGA,OAAO,CAACC,KAAX,cAAoBD,OAAO,CAACE,KAA5B,cAAqCF,OAAO,CAACM,KAA7C,KACCN,OAAO,CAACO,UAAR,KAAuB,IAAvB,cAAkCP,OAAO,CAACO,UAA1C,IAAyD,EAD1D,CADF;AAID","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n'use strict';\n\nconst {PlatformConstants} = require('../BatchedBridge/NativeModules');\nconst ReactNativeVersion = require('./ReactNativeVersion');\n\n/**\n * Checks that the version of this React Native JS is compatible with the native\n * code, throwing an error if it isn't.\n *\n * The existence of this module is part of the public interface of React Native\n * even though it is used only internally within React Native. React Native\n * implementations for other platforms (ex: Windows) may override this module\n * and rely on its existence as a separate module.\n */\nexports.checkVersions = function checkVersions(): void {\n  if (!PlatformConstants) {\n    return;\n  }\n\n  const nativeVersion = PlatformConstants.reactNativeVersion;\n  if (\n    ReactNativeVersion.version.major !== nativeVersion.major ||\n    ReactNativeVersion.version.minor !== nativeVersion.minor\n  ) {\n    console.error(\n      `React Native version mismatch.\\n\\nJavaScript version: ${_formatVersion(\n        ReactNativeVersion.version,\n      )}\\n` +\n        `Native version: ${_formatVersion(nativeVersion)}\\n\\n` +\n        'Make sure that you have rebuilt the native code. If the problem ' +\n        'persists try clearing the Watchman and packager caches with ' +\n        '`watchman watch-del-all && react-native start --reset-cache`.',\n    );\n  }\n};\n\nfunction _formatVersion(version): string {\n  return (\n    `${version.major}.${version.minor}.${version.patch}` +\n    (version.prerelease !== null ? `-${version.prerelease}` : '')\n  );\n}\n"]},"metadata":{},"sourceType":"script"}