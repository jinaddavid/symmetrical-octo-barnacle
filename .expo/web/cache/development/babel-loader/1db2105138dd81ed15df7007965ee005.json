{"ast":null,"code":"'use strict';\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nclass WebSocketEvent {\n  constructor(type, eventInitDict) {\n    this.type = type.toString();\n\n    _extends(this, eventInitDict);\n  }\n\n}\n\nmodule.exports = WebSocketEvent;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/WebSocket/WebSocketEvent.js"],"names":["WebSocketEvent","constructor","type","eventInitDict","toString","module","exports"],"mappings":"AASA;;;;AAUA,MAAMA,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,aAAP,EAAsB;AAC/B,SAAKD,IAAL,GAAYA,IAAI,CAACE,QAAL,EAAZ;;AACA,aAAc,IAAd,EAAoBD,aAApB;AACD;;AAJkB;;AAOrBE,MAAM,CAACC,OAAP,GAAiBN,cAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Event object passed to the `onopen`, `onclose`, `onmessage`, `onerror`\n * callbacks of `WebSocket`.\n *\n * The `type` property is \"open\", \"close\", \"message\", \"error\" respectively.\n *\n * In case of \"message\", the `data` property contains the incoming data.\n */\nclass WebSocketEvent {\n  constructor(type, eventInitDict) {\n    this.type = type.toString();\n    Object.assign(this, eventInitDict);\n  }\n}\n\nmodule.exports = WebSocketEvent;\n"]},"metadata":{},"sourceType":"script"}