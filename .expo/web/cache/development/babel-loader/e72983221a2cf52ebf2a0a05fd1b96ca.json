{"ast":null,"code":"'use strict';\n\nvar AnimatedNode = require(\"./AnimatedNode\");\n\nvar NativeAnimatedHelper = require(\"../NativeAnimatedHelper\");\n\nclass AnimatedWithChildren extends AnimatedNode {\n  constructor() {\n    super();\n    this._children = [];\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      for (var child of this._children) {\n        child.__makeNative();\n\n        NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n      }\n    }\n  }\n\n  __addChild(child) {\n    if (this._children.length === 0) {\n      this.__attach();\n    }\n\n    this._children.push(child);\n\n    if (this.__isNative) {\n      child.__makeNative();\n\n      NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n    }\n  }\n\n  __removeChild(child) {\n    var index = this._children.indexOf(child);\n\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n\n    if (this.__isNative && child.__isNative) {\n      NativeAnimatedHelper.API.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n    }\n\n    this._children.splice(index, 1);\n\n    if (this._children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  __getChildren() {\n    return this._children;\n  }\n\n}\n\nmodule.exports = AnimatedWithChildren;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/Animated/src/nodes/AnimatedWithChildren.js"],"names":["AnimatedNode","require","NativeAnimatedHelper","AnimatedWithChildren","constructor","_children","__makeNative","__isNative","child","API","connectAnimatedNodes","__getNativeTag","__addChild","length","__attach","push","__removeChild","index","indexOf","console","warn","disconnectAnimatedNodes","splice","__detach","__getChildren","module","exports"],"mappings":"AASA;;AAEA,IAAMA,YAAY,GAAGC,OAAO,kBAA5B;;AACA,IAAMC,oBAAoB,GAAGD,OAAO,2BAApC;;AAEA,MAAME,oBAAN,SAAmCH,YAAnC,CAAgD;AAG9CI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,QAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,WAAKA,UAAL,GAAkB,IAAlB;;AACA,WAAK,IAAMC,KAAX,IAAoB,KAAKH,SAAzB,EAAoC;AAClCG,QAAAA,KAAK,CAACF,YAAN;;AACAJ,QAAAA,oBAAoB,CAACO,GAArB,CAAyBC,oBAAzB,CACE,KAAKC,cAAL,EADF,EAEEH,KAAK,CAACG,cAAN,EAFF;AAID;AACF;AACF;;AAEDC,EAAAA,UAAU,CAACJ,KAAD,EAA4B;AACpC,QAAI,KAAKH,SAAL,CAAeQ,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WAAKC,QAAL;AACD;;AACD,SAAKT,SAAL,CAAeU,IAAf,CAAoBP,KAApB;;AACA,QAAI,KAAKD,UAAT,EAAqB;AAEnBC,MAAAA,KAAK,CAACF,YAAN;;AACAJ,MAAAA,oBAAoB,CAACO,GAArB,CAAyBC,oBAAzB,CACE,KAAKC,cAAL,EADF,EAEEH,KAAK,CAACG,cAAN,EAFF;AAID;AACF;;AAEDK,EAAAA,aAAa,CAACR,KAAD,EAA4B;AACvC,QAAMS,KAAK,GAAG,KAAKZ,SAAL,CAAea,OAAf,CAAuBV,KAAvB,CAAd;;AACA,QAAIS,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBE,MAAAA,OAAO,CAACC,IAAR,CAAa,6CAAb;AACA;AACD;;AACD,QAAI,KAAKb,UAAL,IAAmBC,KAAK,CAACD,UAA7B,EAAyC;AACvCL,MAAAA,oBAAoB,CAACO,GAArB,CAAyBY,uBAAzB,CACE,KAAKV,cAAL,EADF,EAEEH,KAAK,CAACG,cAAN,EAFF;AAID;;AACD,SAAKN,SAAL,CAAeiB,MAAf,CAAsBL,KAAtB,EAA6B,CAA7B;;AACA,QAAI,KAAKZ,SAAL,CAAeQ,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WAAKU,QAAL;AACD;AACF;;AAEDC,EAAAA,aAAa,GAAwB;AACnC,WAAO,KAAKnB,SAAZ;AACD;;AAxD6C;;AA2DhDoB,MAAM,CAACC,OAAP,GAAiBvB,oBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n'use strict';\n\nconst AnimatedNode = require('./AnimatedNode');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nclass AnimatedWithChildren extends AnimatedNode {\n  _children: Array<AnimatedNode>;\n\n  constructor() {\n    super();\n    this._children = [];\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n      for (const child of this._children) {\n        child.__makeNative();\n        NativeAnimatedHelper.API.connectAnimatedNodes(\n          this.__getNativeTag(),\n          child.__getNativeTag(),\n        );\n      }\n    }\n  }\n\n  __addChild(child: AnimatedNode): void {\n    if (this._children.length === 0) {\n      this.__attach();\n    }\n    this._children.push(child);\n    if (this.__isNative) {\n      // Only accept \"native\" animated nodes as children\n      child.__makeNative();\n      NativeAnimatedHelper.API.connectAnimatedNodes(\n        this.__getNativeTag(),\n        child.__getNativeTag(),\n      );\n    }\n  }\n\n  __removeChild(child: AnimatedNode): void {\n    const index = this._children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n    if (this.__isNative && child.__isNative) {\n      NativeAnimatedHelper.API.disconnectAnimatedNodes(\n        this.__getNativeTag(),\n        child.__getNativeTag(),\n      );\n    }\n    this._children.splice(index, 1);\n    if (this._children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  __getChildren(): Array<AnimatedNode> {\n    return this._children;\n  }\n}\n\nmodule.exports = AnimatedWithChildren;\n"]},"metadata":{},"sourceType":"script"}