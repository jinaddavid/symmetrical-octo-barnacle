{"ast":null,"code":"var _jsxFileName = \"/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/screens/CandidateProfileInputScreen.js\";\nvar _excluded = [\"isCountryValid\", \"isCityValid\", \"isSurnameValid\", \"isEmailValid\", \"isNameValid\"];\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CandidateAvatar from \"../components/CandidateAvatar\";\nimport CandidateTextInput from \"../components/CandidateTextInput\";\nimport Validators from \"../model/Validators\";\nimport withValidation from \"../components/HOC/withValidation\";\nimport { nextAvatar } from \"../model/DelayedCandidateService\";\nvar {\n  minimalLength,\n  maximalLength,\n  correctEmail\n} = Validators;\nvar NameInput = withValidation(CandidateTextInput, [minimalLength(3), maximalLength(20)]);\nvar SurnameInput = withValidation(CandidateTextInput, [minimalLength(3), maximalLength(20)]);\nvar EmailInput = withValidation(CandidateTextInput, [minimalLength(3), correctEmail, maximalLength(20)]);\nvar CityInput = withValidation(CandidateTextInput, [minimalLength(3), maximalLength(20)]);\nvar CountryInput = withValidation(CandidateTextInput, [minimalLength(3), maximalLength(20)]);\n\nclass CandidateProfileInputScreen extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onNameChanged = (value, isValid) => {\n      this.setState({\n        name: value,\n        isNameValid: isValid\n      });\n    };\n\n    this.onSurnameChanged = (value, isValid) => {\n      this.setState({\n        surname: value,\n        isSurnameValid: isValid\n      });\n    };\n\n    this.onEmailChanged = (value, isValid) => {\n      this.setState({\n        email: value,\n        isEmailValid: isValid\n      });\n    };\n\n    this.onCityChanged = (value, isValid) => {\n      this.setState({\n        city: value,\n        isCityValid: isValid\n      });\n    };\n\n    this.onCountryChanged = (value, isValid) => {\n      this.setState({\n        country: value,\n        isCountryValid: isValid\n      });\n    };\n\n    this.onSubmitPressed = () => {\n      var _this$state = this.state,\n          {\n        isCountryValid,\n        isCityValid,\n        isSurnameValid,\n        isEmailValid,\n        isNameValid\n      } = _this$state,\n          candidate = _objectWithoutProperties(_this$state, _excluded);\n\n      var {\n        navigation: {\n          goBack,\n          state: {\n            params: {\n              onSubmited\n            }\n          }\n        }\n      } = this.props;\n      var isValid = [isCountryValid, isCityValid, isSurnameValid, isEmailValid, isNameValid].reduce((p, c) => p && c, true);\n\n      if (isValid) {\n        onSubmited(candidate);\n        goBack();\n      }\n    };\n\n    var {\n      navigation: {\n        state: {\n          params: {\n            name,\n            surname,\n            email,\n            city,\n            country,\n            avatarUrl\n          } = {}\n        }\n      }\n    } = this.props;\n    this.state = {\n      name: name || '',\n      surname: surname || '',\n      email: email || '',\n      city: city || '',\n      country: country || '',\n      avatarUrl: avatarUrl || nextAvatar(),\n      isNameValid: Boolean(name),\n      isSurnameValid: Boolean(surname),\n      isEmailValid: Boolean(email),\n      isCityValid: Boolean(city),\n      isCountryValid: Boolean(country)\n    };\n  }\n\n  render() {\n    var {\n      name,\n      surname,\n      email,\n      city,\n      country,\n      avatarUrl\n    } = this.state;\n    var {\n      navigation\n    } = this.props;\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.avatarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, React.createElement(CandidateAvatar, {\n      style: styles.avatar,\n      avatarUrl: avatarUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    })), React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, React.createElement(NameInput, {\n      label: \"Name\",\n      value: name,\n      onChanged: this.onNameChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), React.createElement(SurnameInput, {\n      label: \"Surname\",\n      value: surname,\n      onChanged: this.onSurnameChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), React.createElement(EmailInput, {\n      label: \"Email\",\n      value: email,\n      onChanged: this.onEmailChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), React.createElement(CityInput, {\n      label: \"City\",\n      value: city,\n      onChanged: this.onCityChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), React.createElement(CountryInput, {\n      label: \"Country\",\n      value: country,\n      onChanged: this.onCountryChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: styles.buttonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.submitButton,\n      onPress: this.onSubmitPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.submitButtonText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"Submit\")), React.createElement(TouchableOpacity, {\n      onPress: () => navigation.goBack(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.cancelButtonText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default CandidateProfileInputScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 12,\n    marginTop: 30\n  },\n  avatar: {\n    height: 150,\n    width: 150,\n    borderRadius: 75,\n    borderWidth: 1,\n    borderColor: '#34495e'\n  },\n  avatarContainer: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  submitButton: {\n    width: 200,\n    height: 40,\n    backgroundColor: '#3498db',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16\n  },\n  cancelButtonText: {\n    marginTop: 12,\n    color: '#000',\n    fontSize: 14\n  },\n  buttonContainer: {\n    marginTop: 12,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/screens/CandidateProfileInputScreen.js"],"names":["React","CandidateAvatar","CandidateTextInput","Validators","withValidation","nextAvatar","minimalLength","maximalLength","correctEmail","NameInput","SurnameInput","EmailInput","CityInput","CountryInput","CandidateProfileInputScreen","PureComponent","constructor","props","onNameChanged","value","isValid","setState","name","isNameValid","onSurnameChanged","surname","isSurnameValid","onEmailChanged","email","isEmailValid","onCityChanged","city","isCityValid","onCountryChanged","country","isCountryValid","onSubmitPressed","state","candidate","navigation","goBack","params","onSubmited","reduce","p","c","avatarUrl","Boolean","render","styles","container","avatarContainer","avatar","buttonContainer","submitButton","submitButtonText","cancelButtonText","StyleSheet","create","flex","padding","marginTop","height","width","borderRadius","borderWidth","borderColor","alignItems","marginBottom","backgroundColor","justifyContent","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View, TouchableOpacity, Text, ScrollView, StyleSheet\n} from 'react-native';\n\nimport CandidateAvatar from '../components/CandidateAvatar';\nimport CandidateTextInput from '../components/CandidateTextInput';\n\nimport Validators from '../model/Validators';\nimport withValidation from '../components/HOC/withValidation';\n\nimport { nextAvatar } from '../model/DelayedCandidateService';\n\nconst { minimalLength, maximalLength, correctEmail } = Validators;\n\nconst NameInput = withValidation(CandidateTextInput, [minimalLength(3), maximalLength(20)]);\nconst SurnameInput = withValidation(CandidateTextInput, [minimalLength(3), maximalLength(20)]);\nconst EmailInput = withValidation(CandidateTextInput, [\n  minimalLength(3),\n  correctEmail,\n  maximalLength(20)\n]);\nconst CityInput = withValidation(CandidateTextInput, [minimalLength(3), maximalLength(20)]);\nconst CountryInput = withValidation(CandidateTextInput, [minimalLength(3), maximalLength(20)]);\n\nclass CandidateProfileInputScreen extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      navigation: {\n        state: {\n          params: {\n            name, surname, email, city, country, avatarUrl\n          } = {}\n        }\n      }\n    } = this.props;\n\n    this.state = {\n      name: name || '',\n      surname: surname || '',\n      email: email || '',\n      city: city || '',\n      country: country || '',\n      avatarUrl: avatarUrl || nextAvatar(),\n      isNameValid: Boolean(name),\n      isSurnameValid: Boolean(surname),\n      isEmailValid: Boolean(email),\n      isCityValid: Boolean(city),\n      isCountryValid: Boolean(country)\n    };\n  }\n\n  onNameChanged = (value, isValid) => {\n    this.setState({ name: value, isNameValid: isValid });\n  };\n\n  onSurnameChanged = (value, isValid) => {\n    this.setState({ surname: value, isSurnameValid: isValid });\n  };\n\n  onEmailChanged = (value, isValid) => {\n    this.setState({ email: value, isEmailValid: isValid });\n  };\n\n  onCityChanged = (value, isValid) => {\n    this.setState({ city: value, isCityValid: isValid });\n  };\n\n  onCountryChanged = (value, isValid) => {\n    this.setState({ country: value, isCountryValid: isValid });\n  };\n\n  onSubmitPressed = () => {\n    const {\n      isCountryValid,\n      isCityValid,\n      isSurnameValid,\n      isEmailValid,\n      isNameValid,\n      ...candidate\n    } = this.state;\n\n    const {\n      navigation: {\n        goBack,\n        state: {\n          params: { onSubmited }\n        }\n      }\n    } = this.props;\n\n    const isValid = [isCountryValid, isCityValid, isSurnameValid, isEmailValid, isNameValid].reduce(\n      (p, c) => p && c,\n      true\n    );\n\n    if (isValid) {\n      onSubmited(candidate);\n      goBack();\n    }\n  };\n\n  render() {\n    const {\n      name, surname, email, city, country, avatarUrl\n    } = this.state;\n\n    const { navigation } = this.props;\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.avatarContainer}>\n          <CandidateAvatar style={styles.avatar} avatarUrl={avatarUrl} />\n        </View>\n        <ScrollView>\n          <NameInput label=\"Name\" value={name} onChanged={this.onNameChanged} />\n          <SurnameInput label=\"Surname\" value={surname} onChanged={this.onSurnameChanged} />\n          <EmailInput label=\"Email\" value={email} onChanged={this.onEmailChanged} />\n          <CityInput label=\"City\" value={city} onChanged={this.onCityChanged} />\n          <CountryInput label=\"Country\" value={country} onChanged={this.onCountryChanged} />\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={styles.submitButton} onPress={this.onSubmitPressed}>\n              <Text style={styles.submitButtonText}>Submit</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => navigation.goBack()}>\n              <Text style={styles.cancelButtonText}>Cancel</Text>\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default CandidateProfileInputScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 12,\n    marginTop: 30\n  },\n  avatar: {\n    height: 150,\n    width: 150,\n    borderRadius: 75,\n    borderWidth: 1,\n    borderColor: '#34495e'\n  },\n  avatarContainer: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  submitButton: {\n    width: 200,\n    height: 40,\n    backgroundColor: '#3498db',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16\n  },\n  cancelButtonText: {\n    marginTop: 12,\n    color: '#000',\n    fontSize: 14\n  },\n  buttonContainer: {\n    marginTop: 12,\n    alignItems: 'center'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}