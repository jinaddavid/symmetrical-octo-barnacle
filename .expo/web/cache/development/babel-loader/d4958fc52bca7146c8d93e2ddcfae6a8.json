{"ast":null,"code":"'use strict';\n\nvar Blob = require(\"./Blob\");\n\nvar {\n  BlobModule\n} = require(\"../BatchedBridge/NativeModules\");\n\nvar BLOB_URL_PREFIX = null;\n\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += \"//\".concat(BlobModule.BLOB_URI_HOST, \"/\");\n  }\n}\n\nclass URL {\n  constructor() {\n    throw new Error('Creating URL objects is not supported yet.');\n  }\n\n  static createObjectURL(blob) {\n    if (BLOB_URL_PREFIX === null) {\n      throw new Error('Cannot create URL for blob!');\n    }\n\n    return \"\".concat(BLOB_URL_PREFIX).concat(blob.data.blobId, \"?offset=\").concat(blob.data.offset, \"&size=\").concat(blob.size);\n  }\n\n  static revokeObjectURL(url) {}\n\n}\n\nmodule.exports = URL;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/Blob/URL.js"],"names":["Blob","require","BlobModule","BLOB_URL_PREFIX","BLOB_URI_SCHEME","BLOB_URI_HOST","URL","constructor","Error","createObjectURL","blob","data","blobId","offset","size","revokeObjectURL","url","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,UAApB;;AAEA,IAAM;AAACC,EAAAA;AAAD,IAAeD,OAAO,kCAA5B;;AAEA,IAAIE,eAAe,GAAG,IAAtB;;AAEA,IAAID,UAAU,IAAI,OAAOA,UAAU,CAACE,eAAlB,KAAsC,QAAxD,EAAkE;AAChED,EAAAA,eAAe,GAAGD,UAAU,CAACE,eAAX,GAA6B,GAA/C;;AACA,MAAI,OAAOF,UAAU,CAACG,aAAlB,KAAoC,QAAxC,EAAkD;AAChDF,IAAAA,eAAe,gBAASD,UAAU,CAACG,aAApB,MAAf;AACD;AACF;;AA0BD,MAAMC,GAAN,CAAU;AACRC,EAAAA,WAAW,GAAG;AACZ,UAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAEqB,SAAfC,eAAe,CAACC,IAAD,EAAa;AACjC,QAAIP,eAAe,KAAK,IAAxB,EAA8B;AAC5B,YAAM,IAAIK,KAAJ,CAAU,6BAAV,CAAN;AACD;;AACD,qBAAUL,eAAV,SAA4BO,IAAI,CAACC,IAAL,CAAUC,MAAtC,qBACEF,IAAI,CAACC,IAAL,CAAUE,MADZ,mBAESH,IAAI,CAACI,IAFd;AAGD;;AAEqB,SAAfC,eAAe,CAACC,GAAD,EAAc,CAEnC;;AAhBO;;AAmBVC,MAAM,CAACC,OAAP,GAAiBZ,GAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Blob = require('./Blob');\n\nconst {BlobModule} = require('../BatchedBridge/NativeModules');\n\nlet BLOB_URL_PREFIX = null;\n\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += `//${BlobModule.BLOB_URI_HOST}/`;\n  }\n}\n\n/**\n * To allow Blobs be accessed via `content://` URIs,\n * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\n *\n * ```xml\n * <manifest>\n *   <application>\n *     <provider\n *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\n *       android:authorities=\"@string/blob_provider_authority\"\n *       android:exported=\"false\"\n *     />\n *   </application>\n * </manifest>\n * ```\n * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\n * Use a dotted name that's entirely unique to your app:\n *\n * ```xml\n * <resources>\n *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\n * </resources>\n * ```\n */\nclass URL {\n  constructor() {\n    throw new Error('Creating URL objects is not supported yet.');\n  }\n\n  static createObjectURL(blob: Blob) {\n    if (BLOB_URL_PREFIX === null) {\n      throw new Error('Cannot create URL for blob!');\n    }\n    return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${\n      blob.data.offset\n    }&size=${blob.size}`;\n  }\n\n  static revokeObjectURL(url: string) {\n    // Do nothing.\n  }\n}\n\nmodule.exports = URL;\n"]},"metadata":{},"sourceType":"script"}