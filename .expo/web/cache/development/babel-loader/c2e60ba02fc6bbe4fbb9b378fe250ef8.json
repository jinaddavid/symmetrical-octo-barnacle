{"ast":null,"code":"'use strict';\n\nvar {\n  polyfillObjectProperty,\n  polyfillGlobal\n} = require(\"../Utilities/PolyfillFunctions\");\n\nif (global.GLOBAL === undefined) {\n  global.GLOBAL = global;\n}\n\nif (global.window === undefined) {\n  global.window = global;\n}\n\nvar _shouldPolyfillCollection = require(\"../vendor/core/_shouldPolyfillES6Collection\");\n\nif (_shouldPolyfillCollection('Map')) {\n  polyfillGlobal('Map', () => require(\"../vendor/core/Map\"));\n}\n\nif (_shouldPolyfillCollection('Set')) {\n  polyfillGlobal('Set', () => require(\"../vendor/core/Set\"));\n}\n\nglobal.process = global.process || {};\nglobal.process.env = global.process.env || {};\n\nif (!global.process.env.NODE_ENV) {\n  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';\n}\n\nif (global.__RCTProfileIsProfiling) {\n  var Systrace = require(\"../Performance/Systrace\");\n\n  Systrace.installReactHook();\n  Systrace.setEnabled(true);\n}\n\nvar ExceptionsManager = require(\"./ExceptionsManager\");\n\nExceptionsManager.installConsoleErrorReporter();\n\nif (!global.__fbDisableExceptionsManager) {\n  var handleError = (e, isFatal) => {\n    try {\n      ExceptionsManager.handleException(e, isFatal);\n    } catch (ee) {\n      console.log('Failed to print error: ', ee.message);\n      throw e;\n    }\n  };\n\n  var ErrorUtils = require(\"../vendor/core/ErrorUtils\");\n\n  ErrorUtils.setGlobalHandler(handleError);\n}\n\nvar ReactNativeVersionCheck = require(\"./ReactNativeVersionCheck\");\n\nReactNativeVersionCheck.checkVersions();\npolyfillGlobal('Promise', () => require(\"../Promise\"));\npolyfillGlobal('regeneratorRuntime', () => {\n  delete global.regeneratorRuntime;\n\n  require('regenerator-runtime/runtime');\n\n  return global.regeneratorRuntime;\n});\n\nvar defineLazyTimer = name => {\n  polyfillGlobal(name, () => require(\"./Timers/JSTimers\")[name]);\n};\n\ndefineLazyTimer('setTimeout');\ndefineLazyTimer('setInterval');\ndefineLazyTimer('setImmediate');\ndefineLazyTimer('clearTimeout');\ndefineLazyTimer('clearInterval');\ndefineLazyTimer('clearImmediate');\ndefineLazyTimer('requestAnimationFrame');\ndefineLazyTimer('cancelAnimationFrame');\ndefineLazyTimer('requestIdleCallback');\ndefineLazyTimer('cancelIdleCallback');\npolyfillGlobal('XMLHttpRequest', () => require(\"../Network/XMLHttpRequest\"));\npolyfillGlobal('FormData', () => require(\"../Network/FormData\"));\npolyfillGlobal('fetch', () => require(\"../Network/fetch\").fetch);\npolyfillGlobal('Headers', () => require(\"../Network/fetch\").Headers);\npolyfillGlobal('Request', () => require(\"../Network/fetch\").Request);\npolyfillGlobal('Response', () => require(\"../Network/fetch\").Response);\npolyfillGlobal('WebSocket', () => require(\"../WebSocket/WebSocket\"));\npolyfillGlobal('Blob', () => require(\"../Blob/Blob\"));\npolyfillGlobal('File', () => require(\"../Blob/File\"));\npolyfillGlobal('FileReader', () => require(\"../Blob/FileReader\"));\npolyfillGlobal('URL', () => require(\"../Blob/URL\"));\n\nif (!global.alert) {\n  global.alert = function (text) {\n    require(\"../Alert/Alert\").alert('Alert', '' + text);\n  };\n}\n\nvar navigator = global.navigator;\n\nif (navigator === undefined) {\n  global.navigator = navigator = {};\n}\n\npolyfillObjectProperty(navigator, 'product', () => 'ReactNative');\npolyfillObjectProperty(navigator, 'geolocation', () => require(\"../Geolocation/Geolocation\"));\n\nvar BatchedBridge = require(\"../BatchedBridge/BatchedBridge\");\n\nBatchedBridge.registerLazyCallableModule('Systrace', () => require(\"../Performance/Systrace\"));\nBatchedBridge.registerLazyCallableModule('JSTimers', () => require(\"./Timers/JSTimers\"));\nBatchedBridge.registerLazyCallableModule('HeapCapture', () => require(\"../Utilities/HeapCapture\"));\nBatchedBridge.registerLazyCallableModule('SamplingProfiler', () => require(\"../Performance/SamplingProfiler\"));\nBatchedBridge.registerLazyCallableModule('RCTLog', () => require(\"../Utilities/RCTLog\"));\nBatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', () => require(\"../EventEmitter/RCTDeviceEventEmitter\"));\nBatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', () => require(\"../EventEmitter/RCTNativeAppEventEmitter\"));\nBatchedBridge.registerLazyCallableModule('PerformanceLogger', () => require(\"../Utilities/PerformanceLogger\"));\nBatchedBridge.registerLazyCallableModule('JSDevSupportModule', () => require(\"../Utilities/JSDevSupportModule\"));\n\nglobal.__fetchSegment = function (segmentId, options, callback) {\n  var {\n    SegmentFetcher\n  } = require(\"../BatchedBridge/NativeModules\");\n\n  if (!SegmentFetcher) {\n    throw new Error('SegmentFetcher is missing. Please ensure that it is ' + 'included as a NativeModule.');\n  }\n\n  SegmentFetcher.fetchSegment(segmentId, options, errorObject => {\n    if (errorObject) {\n      var error = new Error(errorObject.message);\n      error.code = errorObject.code;\n      callback(error);\n    }\n\n    callback(null);\n  });\n};\n\nif (__DEV__) {\n  if (!global.__RCTProfileIsProfiling) {\n    BatchedBridge.registerCallableModule('HMRClient', require(\"../Utilities/HMRClient\"));\n\n    if (!window.document) {\n      require(\"./Devtools/setupDevtools\");\n    }\n\n    var JSInspector = require(\"../JSInspector/JSInspector\");\n\n    JSInspector.registerAgent(require(\"../JSInspector/NetworkAgent\"));\n  }\n}","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/Core/InitializeCore.js"],"names":["polyfillObjectProperty","polyfillGlobal","require","global","GLOBAL","undefined","window","_shouldPolyfillCollection","process","env","NODE_ENV","__DEV__","__RCTProfileIsProfiling","Systrace","installReactHook","setEnabled","ExceptionsManager","installConsoleErrorReporter","__fbDisableExceptionsManager","handleError","e","isFatal","handleException","ee","console","log","message","ErrorUtils","setGlobalHandler","ReactNativeVersionCheck","checkVersions","regeneratorRuntime","defineLazyTimer","name","fetch","Headers","Request","Response","alert","text","navigator","BatchedBridge","registerLazyCallableModule","__fetchSegment","segmentId","options","callback","SegmentFetcher","Error","fetchSegment","errorObject","error","code","registerCallableModule","document","JSInspector","registerAgent"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n/* globals window: true */\n\n/**\n * Sets up global variables typical in most JavaScript environments.\n *\n *   1. Global timers (via `setTimeout` etc).\n *   2. Global console object.\n *   3. Hooks for printing stack traces with source maps.\n *\n * Leaves enough room in the environment for implementing your own:\n *\n *   1. Require system.\n *   2. Bridged modules.\n *\n */\n'use strict';\n\nconst {polyfillObjectProperty, polyfillGlobal} = require('../Utilities/PolyfillFunctions');\n\nif (global.GLOBAL === undefined) {\n  global.GLOBAL = global;\n}\n\nif (global.window === undefined) {\n  global.window = global;\n}\n\n// Set up collections\nconst _shouldPolyfillCollection = require('../vendor/core/_shouldPolyfillES6Collection');\nif (_shouldPolyfillCollection('Map')) {\n  polyfillGlobal('Map', () => require('../vendor/core/Map'));\n}\nif (_shouldPolyfillCollection('Set')) {\n  polyfillGlobal('Set', () => require('../vendor/core/Set'));\n}\n\n// Set up process\nglobal.process = global.process || {};\nglobal.process.env = global.process.env || {};\nif (!global.process.env.NODE_ENV) {\n  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';\n}\n\n// Setup the Systrace profiling hooks if necessary\nif (global.__RCTProfileIsProfiling) {\n  const Systrace = require('../Performance/Systrace');\n  Systrace.installReactHook();\n  Systrace.setEnabled(true);\n}\n\n// Set up console\nconst ExceptionsManager = require('./ExceptionsManager');\nExceptionsManager.installConsoleErrorReporter();\n\n// Set up error handler\nif (!global.__fbDisableExceptionsManager) {\n  const handleError = (e, isFatal) => {\n    try {\n      ExceptionsManager.handleException(e, isFatal);\n    } catch (ee) {\n      console.log('Failed to print error: ', ee.message);\n      throw e;\n    }\n  };\n\n  const ErrorUtils = require('../vendor/core/ErrorUtils');\n  ErrorUtils.setGlobalHandler(handleError);\n}\n\n// Check for compatibility between the JS and native code\nconst ReactNativeVersionCheck = require('./ReactNativeVersionCheck');\nReactNativeVersionCheck.checkVersions();\n\n// Set up Promise\n// The native Promise implementation throws the following error:\n// ERROR: Event loop not supported.\npolyfillGlobal('Promise', () => require('../Promise'));\n\n// Set up regenerator.\npolyfillGlobal('regeneratorRuntime', () => {\n  // The require just sets up the global, so make sure when we first\n  // invoke it the global does not exist\n  delete global.regeneratorRuntime;\n  /* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an\n   * error found when Flow v0.54 was deployed. To see the error delete this\n   * comment and run Flow. */\n  require('regenerator-runtime/runtime');\n  return global.regeneratorRuntime;\n});\n\n// Set up timers\nconst defineLazyTimer = name => {\n  polyfillGlobal(name, () => require('./Timers/JSTimers')[name]);\n};\ndefineLazyTimer('setTimeout');\ndefineLazyTimer('setInterval');\ndefineLazyTimer('setImmediate');\ndefineLazyTimer('clearTimeout');\ndefineLazyTimer('clearInterval');\ndefineLazyTimer('clearImmediate');\ndefineLazyTimer('requestAnimationFrame');\ndefineLazyTimer('cancelAnimationFrame');\ndefineLazyTimer('requestIdleCallback');\ndefineLazyTimer('cancelIdleCallback');\n\n// Set up XHR\n// The native XMLHttpRequest in Chrome dev tools is CORS aware and won't\n// let you fetch anything from the internet\npolyfillGlobal('XMLHttpRequest', () => require('../Network/XMLHttpRequest'));\npolyfillGlobal('FormData', () => require('../Network/FormData'));\n\npolyfillGlobal('fetch', () => require('../Network/fetch').fetch);\npolyfillGlobal('Headers', () => require('../Network/fetch').Headers);\npolyfillGlobal('Request', () => require('../Network/fetch').Request);\npolyfillGlobal('Response', () => require('../Network/fetch').Response);\npolyfillGlobal('WebSocket', () => require('../WebSocket/WebSocket'));\npolyfillGlobal('Blob', () => require('../Blob/Blob'));\npolyfillGlobal('File', () => require('../Blob/File'));\npolyfillGlobal('FileReader', () => require('../Blob/FileReader'));\npolyfillGlobal('URL', () => require('../Blob/URL'));\n\n// Set up alert\nif (!global.alert) {\n  global.alert = function(text) {\n    // Require Alert on demand. Requiring it too early can lead to issues\n    // with things like Platform not being fully initialized.\n    require('../Alert/Alert').alert('Alert', '' + text);\n  };\n}\n\n// Set up Geolocation\nlet navigator = global.navigator;\nif (navigator === undefined) {\n  global.navigator = navigator = {};\n}\n\n// see https://github.com/facebook/react-native/issues/10881\npolyfillObjectProperty(navigator, 'product', () => 'ReactNative');\npolyfillObjectProperty(navigator, 'geolocation', () => require('../Geolocation/Geolocation'));\n\n// Just to make sure the JS gets packaged up. Wait until the JS environment has\n// been initialized before requiring them.\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\nBatchedBridge.registerLazyCallableModule('Systrace', () => require('../Performance/Systrace'));\nBatchedBridge.registerLazyCallableModule('JSTimers', () => require('./Timers/JSTimers'));\nBatchedBridge.registerLazyCallableModule('HeapCapture', () =>\n  require('../Utilities/HeapCapture'),\n);\nBatchedBridge.registerLazyCallableModule('SamplingProfiler', () =>\n  require('../Performance/SamplingProfiler'),\n);\nBatchedBridge.registerLazyCallableModule('RCTLog', () => require('../Utilities/RCTLog'));\nBatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', () =>\n  require('../EventEmitter/RCTDeviceEventEmitter'),\n);\nBatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', () =>\n  require('../EventEmitter/RCTNativeAppEventEmitter'),\n);\nBatchedBridge.registerLazyCallableModule('PerformanceLogger', () =>\n  require('../Utilities/PerformanceLogger'),\n);\nBatchedBridge.registerLazyCallableModule('JSDevSupportModule', () =>\n  require('../Utilities/JSDevSupportModule'),\n);\n\nglobal.__fetchSegment = function(\n  segmentId: number,\n  options: {|+otaBuildNumber: ?string|},\n  callback: (?Error) => void,\n) {\n  const {SegmentFetcher} = require('../BatchedBridge/NativeModules');\n  if (!SegmentFetcher) {\n    throw new Error(\n      'SegmentFetcher is missing. Please ensure that it is ' +\n        'included as a NativeModule.',\n    );\n  }\n\n  SegmentFetcher.fetchSegment(\n    segmentId,\n    options,\n    (errorObject: ?{message: string, code: string}) => {\n      if (errorObject) {\n        const error = new Error(errorObject.message);\n        (error: any).code = errorObject.code;\n        callback(error);\n      }\n\n      callback(null);\n    },\n  );\n};\n\n// Set up devtools\nif (__DEV__) {\n  if (!global.__RCTProfileIsProfiling) {\n    BatchedBridge.registerCallableModule('HMRClient', require('../Utilities/HMRClient'));\n\n    // not when debugging in chrome\n    // TODO(t12832058) This check is broken\n    if (!window.document) {\n      require('./Devtools/setupDevtools');\n    }\n\n    // Set up inspector\n    const JSInspector = require('../JSInspector/JSInspector');\n    /* $FlowFixMe(>=0.56.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error found when Flow v0.56 was deployed. To see the error\n     * delete this comment and run Flow. */\n    JSInspector.registerAgent(require('../JSInspector/NetworkAgent'));\n  }\n}\n"]},"metadata":{},"sourceType":"script"}