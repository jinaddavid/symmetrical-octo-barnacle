{"ast":null,"code":"'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ColorPropType = require(\"../StyleSheet/ColorPropType\");\n\nvar ImageResizeMode = require(\"./ImageResizeMode\");\n\nvar LayoutPropTypes = require(\"../StyleSheet/LayoutPropTypes\");\n\nvar ReactPropTypes = require('prop-types');\n\nvar ShadowPropTypesIOS = require(\"../Components/View/ShadowPropTypesIOS\");\n\nvar TransformPropTypes = require(\"../StyleSheet/TransformPropTypes\");\n\nvar ImageStylePropTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, LayoutPropTypes), ShadowPropTypesIOS), TransformPropTypes), {}, {\n  resizeMode: ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),\n  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),\n  backgroundColor: ColorPropType,\n  borderColor: ColorPropType,\n  borderWidth: ReactPropTypes.number,\n  borderRadius: ReactPropTypes.number,\n  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),\n  tintColor: ColorPropType,\n  opacity: ReactPropTypes.number,\n  overlayColor: ReactPropTypes.string,\n  borderTopLeftRadius: ReactPropTypes.number,\n  borderTopRightRadius: ReactPropTypes.number,\n  borderBottomLeftRadius: ReactPropTypes.number,\n  borderBottomRightRadius: ReactPropTypes.number\n});\n\nmodule.exports = ImageStylePropTypes;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/Image/ImageStylePropTypes.js"],"names":["ColorPropType","require","ImageResizeMode","LayoutPropTypes","ReactPropTypes","ShadowPropTypesIOS","TransformPropTypes","ImageStylePropTypes","resizeMode","oneOf","Object","keys","backfaceVisibility","backgroundColor","borderColor","borderWidth","number","borderRadius","overflow","tintColor","opacity","overlayColor","string","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","module","exports"],"mappings":"AASA;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,+BAA7B;;AACA,IAAMC,eAAe,GAAGD,OAAO,qBAA/B;;AACA,IAAME,eAAe,GAAGF,OAAO,iCAA/B;;AACA,IAAMG,cAAc,GAAGH,OAAO,CAAC,YAAD,CAA9B;;AACA,IAAMI,kBAAkB,GAAGJ,OAAO,yCAAlC;;AACA,IAAMK,kBAAkB,GAAGL,OAAO,oCAAlC;;AAEA,IAAMM,mBAAmB,+DACpBJ,eADoB,GAEpBE,kBAFoB,GAGpBC,kBAHoB;AAIvBE,EAAAA,UAAU,EAAEJ,cAAc,CAACK,KAAf,CAAqBC,MAAM,CAACC,IAAP,CAAYT,eAAZ,CAArB,CAJW;AAKvBU,EAAAA,kBAAkB,EAAER,cAAc,CAACK,KAAf,CAAqB,CAAC,SAAD,EAAY,QAAZ,CAArB,CALG;AAMvBI,EAAAA,eAAe,EAAEb,aANM;AAOvBc,EAAAA,WAAW,EAAEd,aAPU;AAQvBe,EAAAA,WAAW,EAAEX,cAAc,CAACY,MARL;AASvBC,EAAAA,YAAY,EAAEb,cAAc,CAACY,MATN;AAUvBE,EAAAA,QAAQ,EAAEd,cAAc,CAACK,KAAf,CAAqB,CAAC,SAAD,EAAY,QAAZ,CAArB,CAVa;AAevBU,EAAAA,SAAS,EAAEnB,aAfY;AAgBvBoB,EAAAA,OAAO,EAAEhB,cAAc,CAACY,MAhBD;AAkCvBK,EAAAA,YAAY,EAAEjB,cAAc,CAACkB,MAlCN;AAqCvBC,EAAAA,mBAAmB,EAAEnB,cAAc,CAACY,MArCb;AAsCvBQ,EAAAA,oBAAoB,EAAEpB,cAAc,CAACY,MAtCd;AAuCvBS,EAAAA,sBAAsB,EAAErB,cAAc,CAACY,MAvChB;AAwCvBU,EAAAA,uBAAuB,EAAEtB,cAAc,CAACY;AAxCjB,EAAzB;;AA2CAW,MAAM,CAACC,OAAP,GAAiBrB,mBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst ColorPropType = require('../StyleSheet/ColorPropType');\nconst ImageResizeMode = require('./ImageResizeMode');\nconst LayoutPropTypes = require('../StyleSheet/LayoutPropTypes');\nconst ReactPropTypes = require('prop-types');\nconst ShadowPropTypesIOS = require('../Components/View/ShadowPropTypesIOS');\nconst TransformPropTypes = require('../StyleSheet/TransformPropTypes');\n\nconst ImageStylePropTypes = {\n  ...LayoutPropTypes,\n  ...ShadowPropTypesIOS,\n  ...TransformPropTypes,\n  resizeMode: ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),\n  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),\n  backgroundColor: ColorPropType,\n  borderColor: ColorPropType,\n  borderWidth: ReactPropTypes.number,\n  borderRadius: ReactPropTypes.number,\n  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),\n\n  /**\n   * Changes the color of all the non-transparent pixels to the tintColor.\n   */\n  tintColor: ColorPropType,\n  opacity: ReactPropTypes.number,\n  /**\n   * When the image has rounded corners, specifying an overlayColor will\n   * cause the remaining space in the corners to be filled with a solid color.\n   * This is useful in cases which are not supported by the Android\n   * implementation of rounded corners:\n   *   - Certain resize modes, such as 'contain'\n   *   - Animated GIFs\n   *\n   * A typical way to use this prop is with images displayed on a solid\n   * background and setting the `overlayColor` to the same color\n   * as the background.\n   *\n   * For details of how this works under the hood, see\n   * http://frescolib.org/docs/rounded-corners-and-circles.html\n   *\n   * @platform android\n   */\n  overlayColor: ReactPropTypes.string,\n\n  // Android-Specific styles\n  borderTopLeftRadius: ReactPropTypes.number,\n  borderTopRightRadius: ReactPropTypes.number,\n  borderBottomLeftRadius: ReactPropTypes.number,\n  borderBottomRightRadius: ReactPropTypes.number,\n};\n\nmodule.exports = ImageStylePropTypes;\n"]},"metadata":{},"sourceType":"script"}