{"ast":null,"code":"'use strict';\n\nvar Promise = require('fbjs/lib/Promise.native');\n\nif (__DEV__) {\n  require('promise/setimmediate/rejection-tracking').enable({\n    allRejections: true,\n    onUnhandled: function onUnhandled(id) {\n      var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var message;\n      var stack;\n      var stringValue = Object.prototype.toString.call(error);\n\n      if (stringValue === '[object Error]') {\n        message = Error.prototype.toString.call(error);\n        stack = error.stack;\n      } else {\n        message = require('pretty-format')(error);\n      }\n\n      var warning = \"Possible Unhandled Promise Rejection (id: \".concat(id, \"):\\n\") + \"\".concat(message, \"\\n\") + (stack == null ? '' : stack);\n      console.warn(warning);\n    },\n    onHandled: id => {\n      var warning = \"Promise Rejection Handled (id: \".concat(id, \")\\n\") + 'This means you can ignore any previous messages of the form ' + \"\\\"Possible Unhandled Promise Rejection (id: \".concat(id, \"):\\\"\");\n      console.warn(warning);\n    }\n  });\n}\n\nmodule.exports = Promise;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/Promise.js"],"names":["Promise","require","__DEV__","enable","allRejections","onUnhandled","id","error","message","stack","stringValue","Object","prototype","toString","call","Error","warning","console","warn","onHandled","module","exports"],"mappings":"AAUA;;AAKA,IAAMA,OAAO,GAAGC,OAAO,CAAC,yBAAD,CAAvB;;AAEA,IAAIC,OAAJ,EAAa;AAIXD,EAAAA,OAAO,CAAC,yCAAD,CAAP,CAAmDE,MAAnD,CAA0D;AACxDC,IAAAA,aAAa,EAAE,IADyC;AAExDC,IAAAA,WAAW,EAAE,qBAACC,EAAD,EAAoB;AAAA,UAAfC,KAAe,uEAAP,EAAO;AAC/B,UAAIC,OAAJ;AACA,UAAIC,KAAJ;AAEA,UAAMC,WAAW,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,KAA/B,CAApB;;AACA,UAAIG,WAAW,KAAK,gBAApB,EAAsC;AACpCF,QAAAA,OAAO,GAAGO,KAAK,CAACH,SAAN,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BP,KAA9B,CAAV;AACAE,QAAAA,KAAK,GAAGF,KAAK,CAACE,KAAd;AACD,OAHD,MAGO;AAILD,QAAAA,OAAO,GAAGP,OAAO,CAAC,eAAD,CAAP,CAAyBM,KAAzB,CAAV;AACD;;AAED,UAAMS,OAAO,GACX,oDAA6CV,EAA7C,sBACGE,OADH,WAECC,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqBA,KAFtB,CADF;AAIAQ,MAAAA,OAAO,CAACC,IAAR,CAAaF,OAAb;AACD,KAtBuD;AAuBxDG,IAAAA,SAAS,EAAEb,EAAE,IAAI;AACf,UAAMU,OAAO,GACX,yCAAkCV,EAAlC,WACA,8DADA,yDAE8CA,EAF9C,SADF;AAIAW,MAAAA,OAAO,CAACC,IAAR,CAAaF,OAAb;AACD;AA7BuD,GAA1D;AA+BD;;AAEDI,MAAM,CAACC,OAAP,GAAiBrB,OAAjB","sourcesContent":["/**\n * Copyright (c) 2016-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst Promise = require('fbjs/lib/Promise.native');\n\nif (__DEV__) {\n  /* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an\n   * error found when Flow v0.54 was deployed. To see the error delete this\n   * comment and run Flow. */\n  require('promise/setimmediate/rejection-tracking').enable({\n    allRejections: true,\n    onUnhandled: (id, error = {}) => {\n      let message: string;\n      let stack: ?string;\n\n      const stringValue = Object.prototype.toString.call(error);\n      if (stringValue === '[object Error]') {\n        message = Error.prototype.toString.call(error);\n        stack = error.stack;\n      } else {\n        /* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses\n         * an error found when Flow v0.54 was deployed. To see the error delete\n         * this comment and run Flow. */\n        message = require('pretty-format')(error);\n      }\n\n      const warning =\n        `Possible Unhandled Promise Rejection (id: ${id}):\\n` +\n        `${message}\\n` +\n        (stack == null ? '' : stack);\n      console.warn(warning);\n    },\n    onHandled: id => {\n      const warning =\n        `Promise Rejection Handled (id: ${id})\\n` +\n        'This means you can ignore any previous messages of the form ' +\n        `\"Possible Unhandled Promise Rejection (id: ${id}):\"`;\n      console.warn(warning);\n    },\n  });\n}\n\nmodule.exports = Promise;\n"]},"metadata":{},"sourceType":"script"}