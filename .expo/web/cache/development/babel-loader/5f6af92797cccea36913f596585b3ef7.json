{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport CandidateService from \"./CandidateService\";\nvar service = new CandidateService();\n\nvar nextAvatar = () => \"https://i.pravatar.cc/300?img=\".concat(service.nextId);\n\nvar fetchDelay = 2000;\nvar updateDelay = 500;\n\nvar delay = timeout => new Promise(resolve => {\n  setTimeout(resolve, timeout);\n});\n\nvar addCandidate = function () {\n  var _ref = _asyncToGenerator(function* (params) {\n    yield delay(updateDelay);\n    return service.addCandidate(params);\n  });\n\n  return function addCandidate(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar updateCandidate = function () {\n  var _ref2 = _asyncToGenerator(function* (params) {\n    yield delay(updateDelay);\n    return service.updateCandidate(params);\n  });\n\n  return function updateCandidate(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar removeCandidate = function () {\n  var _ref3 = _asyncToGenerator(function* (params) {\n    yield delay(updateDelay);\n    return service.removeCandidate(params);\n  });\n\n  return function removeCandidate(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar fetchCandidates = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    yield delay(fetchDelay);\n    return service.fetchCandidates();\n  });\n\n  return function fetchCandidates() {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar fetchDetails = function () {\n  var _ref5 = _asyncToGenerator(function* (params) {\n    yield delay(fetchDelay);\n    return service.fetchDetails(params);\n  });\n\n  return function fetchDetails(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexport { nextAvatar };\nexport default {\n  updateCandidate,\n  fetchCandidates,\n  fetchDetails,\n  addCandidate,\n  removeCandidate\n};","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/model/DelayedCandidateService.js"],"names":["CandidateService","service","nextAvatar","nextId","fetchDelay","updateDelay","delay","timeout","Promise","resolve","setTimeout","addCandidate","params","updateCandidate","removeCandidate","fetchCandidates","fetchDetails"],"mappings":";;;;AAAA,OAAOA,gBAAP;AAEA,IAAMC,OAAO,GAAG,IAAID,gBAAJ,EAAhB;;AACA,IAAME,UAAU,GAAG,8CAAuCD,OAAO,CAACE,MAA/C,CAAnB;;AAEA,IAAMC,UAAU,GAAG,IAAnB;AACA,IAAMC,WAAW,GAAG,GAApB;;AAEA,IAAMC,KAAK,GAAGC,OAAO,IAAI,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAChDC,EAAAA,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAV;AACD,CAFwB,CAAzB;;AAIA,IAAMI,YAAY;AAAA,+BAAG,WAAOC,MAAP,EAAkB;AACrC,UAAMN,KAAK,CAACD,WAAD,CAAX;AACA,WAAOJ,OAAO,CAACU,YAAR,CAAqBC,MAArB,CAAP;AACD,GAHiB;;AAAA,kBAAZD,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAKA,IAAME,eAAe;AAAA,gCAAG,WAAOD,MAAP,EAAkB;AACxC,UAAMN,KAAK,CAACD,WAAD,CAAX;AACA,WAAOJ,OAAO,CAACY,eAAR,CAAwBD,MAAxB,CAAP;AACD,GAHoB;;AAAA,kBAAfC,eAAe;AAAA;AAAA;AAAA,GAArB;;AAKA,IAAMC,eAAe;AAAA,gCAAG,WAAOF,MAAP,EAAkB;AACxC,UAAMN,KAAK,CAACD,WAAD,CAAX;AACA,WAAOJ,OAAO,CAACa,eAAR,CAAwBF,MAAxB,CAAP;AACD,GAHoB;;AAAA,kBAAfE,eAAe;AAAA;AAAA;AAAA,GAArB;;AAKA,IAAMC,eAAe;AAAA,gCAAG,aAAY;AAClC,UAAMT,KAAK,CAACF,UAAD,CAAX;AACA,WAAOH,OAAO,CAACc,eAAR,EAAP;AACD,GAHoB;;AAAA,kBAAfA,eAAe;AAAA;AAAA;AAAA,GAArB;;AAKA,IAAMC,YAAY;AAAA,gCAAG,WAAOJ,MAAP,EAAkB;AACrC,UAAMN,KAAK,CAACF,UAAD,CAAX;AACA,WAAOH,OAAO,CAACe,YAAR,CAAqBJ,MAArB,CAAP;AACD,GAHiB;;AAAA,kBAAZI,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAKA,SAASd,UAAT;AAEA,eAAe;AACbW,EAAAA,eADa;AAEbE,EAAAA,eAFa;AAGbC,EAAAA,YAHa;AAIbL,EAAAA,YAJa;AAKbG,EAAAA;AALa,CAAf","sourcesContent":["import CandidateService from './CandidateService';\n\nconst service = new CandidateService();\nconst nextAvatar = () => `https://i.pravatar.cc/300?img=${service.nextId}`;\n\nconst fetchDelay = 2000;\nconst updateDelay = 500;\n\nconst delay = timeout => new Promise((resolve) => {\n  setTimeout(resolve, timeout);\n});\n\nconst addCandidate = async (params) => {\n  await delay(updateDelay);\n  return service.addCandidate(params);\n};\n\nconst updateCandidate = async (params) => {\n  await delay(updateDelay);\n  return service.updateCandidate(params);\n};\n\nconst removeCandidate = async (params) => {\n  await delay(updateDelay);\n  return service.removeCandidate(params);\n};\n\nconst fetchCandidates = async () => {\n  await delay(fetchDelay);\n  return service.fetchCandidates();\n};\n\nconst fetchDetails = async (params) => {\n  await delay(fetchDelay);\n  return service.fetchDetails(params);\n};\n\nexport { nextAvatar };\n\nexport default {\n  updateCandidate,\n  fetchCandidates,\n  fetchDetails,\n  addCandidate,\n  removeCandidate\n};\n"]},"metadata":{},"sourceType":"module"}