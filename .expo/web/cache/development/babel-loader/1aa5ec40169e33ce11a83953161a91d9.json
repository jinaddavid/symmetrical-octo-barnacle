{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nclass CandidateService {\n  constructor() {\n    this.addCandidate = function () {\n      var _ref2 = _asyncToGenerator(function* (_ref) {\n        var {\n          name,\n          surname,\n          email,\n          city,\n          country,\n          avatarUrl\n        } = _ref;\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.updateCandidate = function () {\n      var _ref4 = _asyncToGenerator(function* (_ref3) {\n        var {\n          id,\n          name,\n          surname,\n          email,\n          city,\n          country,\n          avatarUrl\n        } = _ref3;\n      });\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    this.removeCandidate = function () {\n      var _ref5 = _asyncToGenerator(function* (id) {});\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    this.fetchCandidates = _asyncToGenerator(function* () {\n      return [];\n    });\n\n    this.fetchDetails = function () {\n      var _ref7 = _asyncToGenerator(function* (id) {\n        return {};\n      });\n\n      return function (_x4) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    this.candidates = [];\n    this.nextId = this.candidates.length + 1;\n  }\n\n}\n\nexport default CandidateService;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/model/CandidateService.js"],"names":["CandidateService","constructor","addCandidate","name","surname","email","city","country","avatarUrl","updateCandidate","id","removeCandidate","fetchCandidates","fetchDetails","candidates","nextId","length"],"mappings":";;;;AAAA,MAAMA,gBAAN,CAAuB;AACrBC,EAAAA,WAAW,GAAG;AAAA,SAKdC,YALc;AAAA,oCAKC,iBAET;AAAA,YAFgB;AACpBC,UAAAA,IADoB;AACdC,UAAAA,OADc;AACLC,UAAAA,KADK;AACEC,UAAAA,IADF;AACQC,UAAAA,OADR;AACiBC,UAAAA;AADjB,SAEhB;AAAE,OAPM;;AAAA;AAAA;AAAA;AAAA;;AAAA,SASdC,eATc;AAAA,oCASI,kBAEZ;AAAA,YAFmB;AACvBC,UAAAA,EADuB;AACnBP,UAAAA,IADmB;AACbC,UAAAA,OADa;AACJC,UAAAA,KADI;AACGC,UAAAA,IADH;AACSC,UAAAA,OADT;AACkBC,UAAAA;AADlB,SAEnB;AAAE,OAXM;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAadG,eAbc;AAAA,oCAaI,WAAOD,EAAP,EAAc,CAAE,CAbpB;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAedE,eAfc,qBAeI;AAAA,aAAY,EAAZ;AAAA,KAfJ;;AAAA,SAiBdC,YAjBc;AAAA,oCAiBC,WAAMH,EAAN;AAAA,eAAa,EAAb;AAAA,OAjBD;;AAAA;AAAA;AAAA;AAAA;;AACZ,SAAKI,UAAL,GAAkB,EAAlB;AACA,SAAKC,MAAL,GAAc,KAAKD,UAAL,CAAgBE,MAAhB,GAAyB,CAAvC;AACD;;AAJoB;;AAqBvB,eAAehB,gBAAf","sourcesContent":["class CandidateService {\n  constructor() {\n    this.candidates = [];\n    this.nextId = this.candidates.length + 1;\n  }\n\n  addCandidate = async ({\n    name, surname, email, city, country, avatarUrl\n  }) => {};\n\n  updateCandidate = async ({\n    id, name, surname, email, city, country, avatarUrl\n  }) => {};\n\n  removeCandidate = async (id) => {};\n\n  fetchCandidates = async () => [];\n\n  fetchDetails = async id => ({});\n}\n\nexport default CandidateService;\n"]},"metadata":{},"sourceType":"module"}