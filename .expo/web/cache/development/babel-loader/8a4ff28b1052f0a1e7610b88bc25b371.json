{"ast":null,"code":"'use strict';\n\nvar _excluded = [\"headers\"];\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar Blob = require(\"../Blob/Blob\");\n\nvar EventTarget = require('event-target-shim');\n\nvar NativeEventEmitter = require(\"../EventEmitter/NativeEventEmitter\");\n\nvar BlobManager = require(\"../Blob/BlobManager\");\n\nvar NativeModules = require(\"../BatchedBridge/NativeModules\");\n\nvar Platform = require(\"../Utilities/Platform\");\n\nvar WebSocketEvent = require(\"./WebSocketEvent\");\n\nvar base64 = require('base64-js');\n\nvar binaryToBase64 = require(\"../Utilities/binaryToBase64\");\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar {\n  WebSocketModule\n} = NativeModules;\nvar CONNECTING = 0;\nvar OPEN = 1;\nvar CLOSING = 2;\nvar CLOSED = 3;\nvar CLOSE_NORMAL = 1000;\nvar WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\nvar nextWebSocketId = 0;\n\nclass WebSocket extends EventTarget(...WEBSOCKET_EVENTS) {\n  constructor(url, protocols, options) {\n    super();\n    this.CONNECTING = CONNECTING;\n    this.OPEN = OPEN;\n    this.CLOSING = CLOSING;\n    this.CLOSED = CLOSED;\n    this.readyState = CONNECTING;\n\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    var _ref = options || {},\n        {\n      headers = {}\n    } = _ref,\n        unrecognized = _objectWithoutProperties(_ref, _excluded);\n\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n      headers.origin = unrecognized.origin;\n      delete unrecognized.origin;\n    }\n\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    if (!WebSocket.isAvailable) {\n      throw new Error('Cannot initialize WebSocket module. ' + 'Native module WebSocketModule is missing.');\n    }\n\n    this._eventEmitter = new NativeEventEmitter(WebSocketModule);\n    this._socketId = nextWebSocketId++;\n\n    this._registerEvents();\n\n    WebSocketModule.connect(url, protocols, {\n      headers\n    }, this._socketId);\n  }\n\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(binaryType) {\n    if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n      throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n    }\n\n    if (this._binaryType === 'blob' || binaryType === 'blob') {\n      invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n\n      if (binaryType === 'blob') {\n        BlobManager.addWebSocketHandler(this._socketId);\n      } else {\n        BlobManager.removeWebSocketHandler(this._socketId);\n      }\n    }\n\n    this._binaryType = binaryType;\n  }\n\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  close(code, reason) {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n\n    this._close(code, reason);\n  }\n\n  send(data) {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (data instanceof Blob) {\n      invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n      BlobManager.sendOverSocket(data, this._socketId);\n      return;\n    }\n\n    if (typeof data === 'string') {\n      WebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      WebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping() {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    WebSocketModule.ping(this._socketId);\n  }\n\n  _close(code, reason) {\n    if (Platform.OS === 'android') {\n      var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n      var closeReason = typeof reason === 'string' ? reason : '';\n      WebSocketModule.close(statusCode, closeReason, this._socketId);\n    } else {\n      WebSocketModule.close(this._socketId);\n    }\n\n    if (BlobManager.isAvailable && this._binaryType === 'blob') {\n      BlobManager.removeWebSocketHandler(this._socketId);\n    }\n  }\n\n  _unregisterEvents() {\n    this._subscriptions.forEach(e => e.remove());\n\n    this._subscriptions = [];\n  }\n\n  _registerEvents() {\n    this._subscriptions = [this._eventEmitter.addListener('websocketMessage', ev => {\n      if (ev.id !== this._socketId) {\n        return;\n      }\n\n      var data = ev.data;\n\n      switch (ev.type) {\n        case 'binary':\n          data = base64.toByteArray(ev.data).buffer;\n          break;\n\n        case 'blob':\n          data = BlobManager.createFromOptions(ev.data);\n          break;\n      }\n\n      this.dispatchEvent(new WebSocketEvent('message', {\n        data\n      }));\n    }), this._eventEmitter.addListener('websocketOpen', ev => {\n      if (ev.id !== this._socketId) {\n        return;\n      }\n\n      this.readyState = this.OPEN;\n      this.dispatchEvent(new WebSocketEvent('open'));\n    }), this._eventEmitter.addListener('websocketClosed', ev => {\n      if (ev.id !== this._socketId) {\n        return;\n      }\n\n      this.readyState = this.CLOSED;\n      this.dispatchEvent(new WebSocketEvent('close', {\n        code: ev.code,\n        reason: ev.reason\n      }));\n\n      this._unregisterEvents();\n\n      this.close();\n    }), this._eventEmitter.addListener('websocketFailed', ev => {\n      if (ev.id !== this._socketId) {\n        return;\n      }\n\n      this.readyState = this.CLOSED;\n      this.dispatchEvent(new WebSocketEvent('error', {\n        message: ev.message\n      }));\n      this.dispatchEvent(new WebSocketEvent('close', {\n        message: ev.message\n      }));\n\n      this._unregisterEvents();\n\n      this.close();\n    })];\n  }\n\n}\n\nWebSocket.CONNECTING = CONNECTING;\nWebSocket.OPEN = OPEN;\nWebSocket.CLOSING = CLOSING;\nWebSocket.CLOSED = CLOSED;\nWebSocket.isAvailable = !!WebSocketModule;\nmodule.exports = WebSocket;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/WebSocket/WebSocket.js"],"names":["Blob","require","EventTarget","NativeEventEmitter","BlobManager","NativeModules","Platform","WebSocketEvent","base64","binaryToBase64","invariant","WebSocketModule","CONNECTING","OPEN","CLOSING","CLOSED","CLOSE_NORMAL","WEBSOCKET_EVENTS","nextWebSocketId","WebSocket","constructor","url","protocols","options","readyState","headers","unrecognized","origin","console","warn","Object","keys","length","join","Array","isArray","isAvailable","Error","_eventEmitter","_socketId","_registerEvents","connect","binaryType","_binaryType","addWebSocketHandler","removeWebSocketHandler","close","code","reason","_close","send","data","sendOverSocket","ArrayBuffer","isView","sendBinary","ping","OS","statusCode","closeReason","_unregisterEvents","_subscriptions","forEach","e","remove","addListener","ev","id","type","toByteArray","buffer","createFromOptions","dispatchEvent","message","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Blob = require('../Blob/Blob');\nconst EventTarget = require('event-target-shim');\nconst NativeEventEmitter = require('../EventEmitter/NativeEventEmitter');\nconst BlobManager = require('../Blob/BlobManager');\nconst NativeModules = require('../BatchedBridge/NativeModules');\nconst Platform = require('../Utilities/Platform');\nconst WebSocketEvent = require('./WebSocketEvent');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst base64 = require('base64-js');\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\nconst invariant = require('fbjs/lib/invariant');\n\nconst {WebSocketModule} = NativeModules;\n\nimport type EventSubscription from '../vendor/emitter/EventSubscription';\n\ntype ArrayBufferView =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | DataView;\n\ntype BinaryType = 'blob' | 'arraybuffer';\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\nconst CLOSE_NORMAL = 1000;\n\nconst WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n\nlet nextWebSocketId = 0;\n\n/**\n * Browser-compatible WebSockets implementation.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * See https://github.com/websockets/ws\n */\nclass WebSocket extends EventTarget(...WEBSOCKET_EVENTS) {\n  static CONNECTING = CONNECTING;\n  static OPEN = OPEN;\n  static CLOSING = CLOSING;\n  static CLOSED = CLOSED;\n\n  CONNECTING: number = CONNECTING;\n  OPEN: number = OPEN;\n  CLOSING: number = CLOSING;\n  CLOSED: number = CLOSED;\n\n  _socketId: number;\n  _eventEmitter: NativeEventEmitter;\n  _subscriptions: Array<EventSubscription>;\n  _binaryType: ?BinaryType;\n\n  onclose: ?Function;\n  onerror: ?Function;\n  onmessage: ?Function;\n  onopen: ?Function;\n\n  bufferedAmount: number;\n  extension: ?string;\n  protocol: ?string;\n  readyState: number = CONNECTING;\n  url: ?string;\n\n  // This module depends on the native `WebSocketModule` module. If you don't include it,\n  // `WebSocket.isAvailable` will return `false`, and WebSocket constructor will throw an error\n  static isAvailable: boolean = !!WebSocketModule;\n\n  constructor(\n    url: string,\n    protocols: ?string | ?Array<string>,\n    options: ?{headers?: {origin?: string}},\n  ) {\n    super();\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    const {headers = {}, ...unrecognized} = options || {};\n\n    // Preserve deprecated backwards compatibility for the 'origin' option\n    /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.68 was deployed. To see the error delete this\n     * comment and run Flow. */\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn(\n        'Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.',\n      );\n      /* $FlowFixMe(>=0.54.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error found when Flow v0.54 was deployed. To see\n       * the error delete this comment and run Flow. */\n      headers.origin = unrecognized.origin;\n      /* $FlowFixMe(>=0.54.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error found when Flow v0.54 was deployed. To see\n       * the error delete this comment and run Flow. */\n      delete unrecognized.origin;\n    }\n\n    // Warn about and discard anything else\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn(\n        'Unrecognized WebSocket connection option(s) `' +\n          Object.keys(unrecognized).join('`, `') +\n          '`. ' +\n          'Did you mean to put these under `headers`?',\n      );\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    if (!WebSocket.isAvailable) {\n      throw new Error(\n        'Cannot initialize WebSocket module. ' +\n          'Native module WebSocketModule is missing.',\n      );\n    }\n\n    this._eventEmitter = new NativeEventEmitter(WebSocketModule);\n    this._socketId = nextWebSocketId++;\n    this._registerEvents();\n    WebSocketModule.connect(\n      url,\n      protocols,\n      {headers},\n      this._socketId,\n    );\n  }\n\n  get binaryType(): ?BinaryType {\n    return this._binaryType;\n  }\n\n  set binaryType(binaryType: BinaryType): void {\n    if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n      throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n    }\n    if (this._binaryType === 'blob' || binaryType === 'blob') {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      if (binaryType === 'blob') {\n        BlobManager.addWebSocketHandler(this._socketId);\n      } else {\n        BlobManager.removeWebSocketHandler(this._socketId);\n      }\n    }\n    this._binaryType = binaryType;\n  }\n\n  get binaryType(): ?BinaryType {\n    return this._binaryType;\n  }\n\n  close(code?: number, reason?: string): void {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n    this._close(code, reason);\n  }\n\n  send(data: string | ArrayBuffer | ArrayBufferView | Blob): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (data instanceof Blob) {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      BlobManager.sendOverSocket(data, this._socketId);\n      return;\n    }\n\n    if (typeof data === 'string') {\n      WebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      WebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping(): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    WebSocketModule.ping(this._socketId);\n  }\n\n  _close(code?: number, reason?: string): void {\n    if (Platform.OS === 'android') {\n      // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n      const statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n      const closeReason = typeof reason === 'string' ? reason : '';\n      WebSocketModule.close(statusCode, closeReason, this._socketId);\n    } else {\n      WebSocketModule.close(this._socketId);\n    }\n\n    if (BlobManager.isAvailable && this._binaryType === 'blob') {\n      BlobManager.removeWebSocketHandler(this._socketId);\n    }\n  }\n\n  _unregisterEvents(): void {\n    this._subscriptions.forEach(e => e.remove());\n    this._subscriptions = [];\n  }\n\n  _registerEvents(): void {\n    this._subscriptions = [\n      this._eventEmitter.addListener('websocketMessage', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        let data = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = BlobManager.createFromOptions(ev.data);\n            break;\n        }\n        this.dispatchEvent(new WebSocketEvent('message', {data}));\n      }),\n      this._eventEmitter.addListener('websocketOpen', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.OPEN;\n        this.dispatchEvent(new WebSocketEvent('open'));\n      }),\n      this._eventEmitter.addListener('websocketClosed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason,\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n      this._eventEmitter.addListener('websocketFailed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('error', {\n            message: ev.message,\n          }),\n        );\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            message: ev.message,\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n    ];\n  }\n}\n\nmodule.exports = WebSocket;\n"]},"metadata":{},"sourceType":"script"}