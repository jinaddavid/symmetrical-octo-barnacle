{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require(\"../vendor/emitter/EventEmitter\");\n\nvar Platform = require(\"../Utilities/Platform\");\n\nvar RCTDeviceEventEmitter = require(\"./RCTDeviceEventEmitter\");\n\nvar invariant = require('fbjs/lib/invariant');\n\nclass NativeEventEmitter extends EventEmitter {\n  constructor(nativeModule) {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(eventType, listener, context) {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType) {\n    invariant(eventType, 'eventType argument is required.');\n    var count = this.listeners(eventType).length;\n\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n\n    super.removeSubscription(subscription);\n  }\n\n}\n\nmodule.exports = NativeEventEmitter;","map":{"version":3,"sources":["/Users/ash/Documents/DevSpace/MobileProject/ReactNative/InProgres/InterView/symmetrical-octo-barnacle/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js"],"names":["EventEmitter","require","Platform","RCTDeviceEventEmitter","invariant","NativeEventEmitter","constructor","nativeModule","sharedSubscriber","OS","_nativeModule","addListener","eventType","listener","context","removeAllListeners","count","listeners","length","removeListeners","removeSubscription","subscription","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,YAAY,GAAGC,OAAO,kCAA5B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,yBAAxB;;AACA,IAAME,qBAAqB,GAAGF,OAAO,2BAArC;;AAEA,IAAMG,SAAS,GAAGH,OAAO,CAAC,oBAAD,CAAzB;;AAaA,MAAMI,kBAAN,SAAiCL,YAAjC,CAA8C;AAG5CM,EAAAA,WAAW,CAACC,YAAD,EAA8B;AACvC,UAAMJ,qBAAqB,CAACK,gBAA5B;;AACA,QAAIN,QAAQ,CAACO,EAAT,KAAgB,KAApB,EAA2B;AACzBL,MAAAA,SAAS,CAACG,YAAD,EAAe,+BAAf,CAAT;AACA,WAAKG,aAAL,GAAqBH,YAArB;AACD;AACF;;AAEDI,EAAAA,WAAW,CACTC,SADS,EAETC,QAFS,EAGTC,OAHS,EAIY;AACrB,QAAI,KAAKJ,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,WAAKA,aAAL,CAAmBC,WAAnB,CAA+BC,SAA/B;AACD;;AACD,WAAO,MAAMD,WAAN,CAAkBC,SAAlB,EAA6BC,QAA7B,EAAuCC,OAAvC,CAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACH,SAAD,EAAoB;AACpCR,IAAAA,SAAS,CAACQ,SAAD,EAAY,iCAAZ,CAAT;AACA,QAAMI,KAAK,GAAG,KAAKC,SAAL,CAAeL,SAAf,EAA0BM,MAAxC;;AACA,QAAI,KAAKR,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,WAAKA,aAAL,CAAmBS,eAAnB,CAAmCH,KAAnC;AACD;;AACD,UAAMD,kBAAN,CAAyBH,SAAzB;AACD;;AAEDQ,EAAAA,kBAAkB,CAACC,YAAD,EAAoC;AACpD,QAAI,KAAKX,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,WAAKA,aAAL,CAAmBS,eAAnB,CAAmC,CAAnC;AACD;;AACD,UAAMC,kBAAN,CAAyBC,YAAzB;AACD;;AApC2C;;AAuC9CC,MAAM,CAACC,OAAP,GAAiBlB,kBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EventEmitter = require('../vendor/emitter/EventEmitter');\nconst Platform = require('../Utilities/Platform');\nconst RCTDeviceEventEmitter = require('./RCTDeviceEventEmitter');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type EmitterSubscription from '../vendor/emitter/EmitterSubscription';\n\ntype NativeModule = {\n  +addListener: (eventType: string) => void,\n  +removeListeners: (count: number) => void,\n};\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nclass NativeEventEmitter extends EventEmitter {\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EmitterSubscription {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: string) {\n    invariant(eventType, 'eventType argument is required.');\n    const count = this.listeners(eventType).length;\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n    super.removeSubscription(subscription);\n  }\n}\n\nmodule.exports = NativeEventEmitter;\n"]},"metadata":{},"sourceType":"script"}